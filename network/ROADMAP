					-*-org-*-

* v1.0.0
** v0.1.0
*** v0.0.1
**** First step
- [ ] We must find a good asn.1 to C++ compiler that works with
  Boost.Asio/C++11. Then we create a wrapper script in perl called 
  `rainbrurpg-asnc` that wrap to the chosen asn.1 compiler
- [ ] Common ASN.1 files stay in the network/src/asn/ directory and
  client/ and server/ had their own src/asn/ subdir for their
  sources.
- [ ] src/example contain a TCPServer and a TCPClient using simple
  ASN.1 file to test the whole toolchain.
- [ ] Must create a Concept/NewProjectLayoutNetwork wiki page
**** TODO Test the RainbruRPG protocol in src/proto
- [ ] Make it an autoconf feature (AC_ARG_ENABLE)
- [ ] Make two binaries CLI client and server
  using libenet http://enet.bespin.org/index.html
  - [ ] Using Boost.Program_options
  - [ ] server listen to a port and waiting for client connection
  - [ ] client connect to server and send protocol packages
    Maybe a very simple CLI interface based on verbs (using readline ?)
**** We also could make benchmark against Boost.Asio and libenet

**** TODO Create benchmarks for deserialization
     CLOCK: [2014-02-07 ven. 10:36]--[2014-02-07 ven. 12:05] =>  1:29
     CLOCK: [2014-02-04 mar. 19:55]--[2014-02-04 mar. 20:24] =>  0:29
- [X] BSon one
- [X] Update GNU headers for 2014
- [X] Need to revamp the Boost.Serialization benchmark
  now using a std::string for result because actually we are
  creating the file. The speed difference between Boost and Bson/Asn
  could be due to file access time.
- [ ] Must fix the Boost.deserialization exception
- [ ] Boost.Serialization one
- [ ] ASN.1 one
**** DONE Creating benchmark for serialization
     CLOCK: [2014-02-05 mer. 12:25]--[2014-02-05 mer. 12:51] =>  0:26
     CLOCK: [2013-04-23 mar. 20:21]--[2013-04-23 mar. 20:43] =>  0:22
     CLOCK: [2013-04-22 lun. 18:00]--[2013-04-22 lun. 18:45] =>  0:45
     CLOCK: [2013-04-21 dim. 10:32]--[2013-04-21 dim. 11:20] =>  0:48
     CLOCK: [2013-04-20 sam. 20:11]--[2013-04-20 sam. 20:35] =>  0:24
     CLOCK: [2013-04-20 sam. 18:38]--[2013-04-20 sam. 18:56] =>  0:18
     CLOCK: [2013-04-20 sam. 17:58]--[2013-04-20 sam. 18:25] =>  0:27
     CLOCK: [2013-04-19 ven. 16:10]--[2013-04-19 ven. 16:33] =>  0:23
     I'm not sure ASN.1 is the best solution and many other binary
     exist : Bson, Boost.Serialization
- [X] Find a way to create benchmarks
  - [X] A really simple benchmark header using template and `gettimeofday`
- [X] separate .hpp and .cpp
- [X] Should be a configure option, not built by default
  an option called 'enable-benchmark'
- [X] src/benchmark/serialization compare ASN.1 speed with Bson
  - [X] Write bson test using mongodb-dev packagg
  - [X] Then try Boost.Serialization
  - [X] Try ASN.1 compiler (test only in BER, only encoding supported by snacc)
    Can't compile ASN generated header due to errors.
    Maube benchmark snacc with both C/C++ output
- [X] Must handle BSon serialization in an OO way
**** DONE Correct project setup
     CLOCK: [2014-02-04 mar. 19:20]--[2014-02-04 mar. 19:47] =>  0:27
     CLOCK: [2013-04-19 ven. 19:32]--[2013-04-19 ven. 20:17] =>  0:45
     CLOCK: [2012-11-03 sam. 19:18]--[2012-11-03 sam. 19:31] =>  0:13
- [X] Use autoscan to create autotools needed files
- [X] set COPYING to the GPLv3 licence 
  As other symlinks, replaced by real files
- [X] GNU ChangeLog
- [X] Add to svn repository
- [X] Create a pkg-config file
- [X] DEPENDENCIES file
- [X] Add subporoject related files to .hgignore
