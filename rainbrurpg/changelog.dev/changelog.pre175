* v 0.0.5-174
- Doxygen documentation update (some undocumented functions)
- MultiColumnList's ScrollBars are shown only if needed
- MultiColumnList contains ScrollBars
- New Doxygen related page for libraries versionning
- Fix an error in tools/transmsg linking
  Adding -L$(top_srcdir)/common/.libs flag in *_LDADD
  The same error occurs and is fixed in xIdent, netFlooder, ftpClient,
  hashsum and unit tests
- Bugfix : editor cannot find libOgreGui (L, l and I options
  added to Makefile.am
- Using moc-qt4 instead of moc for Qt based libraries
- configure.in now define library version for OgreGUI and Common
- ScrollPane use DrawingDevSettings
- QuadRenderer now using DrawingDevList
- DrawingDevList implementation
- DrawingDevSettings implementation
- soBetaGui::drawToolTip save and restore parent scissor rectangle
  settings to fox a bug
- QuadRenderer::renderGlyphs now set the scissorRectangle if needed
  It fixes a bug in the multicolumnlist header renderering 
- MultiColumnListColumn::setMinimumWidth() implementation
- MultiColumnList column can be resized
- Better column move handling that avoid clipping when between two column
- User can move MultiColumnList's columns
- Do not change movingColumn when moving over another column
- Column's ghost is correct

* v 0.0.5-173
- ToolTip::hide() bug fixed
- FontManager space fixed
- ToolTip is now a class
- ToolTip on columnheader to explain how to move column
- Skin drawToolTip() implementation
- MultiColumnList's selection work in ordered list
- MultiColumnList sort OK
- Column sort indicators correctly drawn
- Handle event that sort column
- (Fix a bug in QuadRenderer with QBM_ALPHA blend mode
  Even if QBM_ALPHA is chosen, global GUI alpha value is now used.
  It was a bug when drawing MultiColumnList colunm sort indicator
  which is a alpha channel PNG image : no way to get alpha channel
  of image and global alpha transition because DEFAULT_COL was used
  in drawRectangle() vertexes color parameter. Now I use mColor.
- MouseEvent is used in MultiColumnList event handling
- MouseEvent implementation
- Fix a bug in the QuadRenderer::drawFilledRectangle() function
- Item's mouse over stop at the last column right
- MultiColumnList::getLastColumnRight() implementation
- DeMouseOver item if mouseOver on column
- DeMouseOver column if mouseOver on item
- MouseOver handling on column item
- MouseOver handling on column header
- MultiColumnListCell implementation

* v 0.0.5-172
- Documentation update
- MultiColumnListItem implementation
-  Drawing MultiColumnList header caption
- MultiColumnListColumn implementation
- QuadRenderer::getFinalPoint handles DrawingDev
  It is used when drawing lines.
- QuadRenderer::drawRectangleLines() implementation
- HomePage news :
  [Title]Implementing MultiColumnList
  [Content]As the ScrollPane widget implementation is finished, I'm
  now working on the MultiColumnList's one. This complex widget will 
  certainly takes me several weeks but it is the last step before the 
  implementation of the server list game state which is the goal of 
  the 0.0.6 release.
- QuadRenderer::addLines() implementation
  With needed functions (beginLines() and endLines())
- QuadRenderer::drawLine() color bug fixed
  QuadRenderer::reset() now set the default texture. It was the
  drawLine() color bug reason.
- MultiColumnList skeleton implementation
- A new .configure script option that makes a MultiColumnList test window
- The bootstrap script now test if RainbruRPG.html/ and 
  RainbruRPG.html/Makefile.am exist
- ScrollPane test window is now hidden/shown when changing menu
- ScrollPane handles its childs event itself to handle drawingDev
- Bugfix : Label was hidden when scrollbars both hidden (Scissor bug)
- Bugfix : alpha was declared both in Widget and Label
- QuadRenderer handles drawingDev when drawing text
- ScrollPane handles ScrollBars events handling
- Fix a bug in the ResiGrip arrow handling

* v 0.0.5-171
- GlobalURI unit test imlemented
- Homepage news
[Title]ScrollPane implementation in progress
[Content]The ScrollPane widget is about to be implemented even if some 
modifications are needed in the event handling os ScrollBars and
Window's TitleBar and ResizeGrip. The first tests prove that the use 
of scissor rectangle to chop off the primitives drawn by QuadRenderer 
to the ScrollPane content was a good idea.[br]
[br]
At the same time, I carry on the implementation of unit tests, actually 
on the common/ library (FtpClient and GlobalURI classes).
- Unit test works in Qt3 version (not only test version)
- common/ftpclient unit test implementation
- Add some functions to common/ftpclient for unit tests implementation
- ScrollBars drawn by ScrollPane
- Documentation update (many undocumented members)
- CurlInterface::setWrittenData() function removed (unused)
- ResizeGrip event handled by Window
   Container::handleButtonEvent() imlementation
   Window uses mScrollPane::handleButtonEvent(mResizeGrip);
- TitleBar, ResizeGrip drawn by Window
- Nothing is drawn if ResizeGrip not added to the ScrollPane
   Window::setTransparency did not set alpha for ResizeGrip and titlebar
- QuadRenderer::debug() implementation
   Used to find a bug in ResizeGrip
- QuadRenderer drawingDev implementation
- Connection ScrollPane's scrollbar signals to slots
- Testing Scrollbar when policy is Always/Never
- Recompute scrollbar visibility when widget is added
- Move and Resize scrollbar when Window is resized
  Using ScrollPane::setWidget and Height
- Widget set* and move, resize makes geometry dirty
- Handle ScrollBars event only if visible

* v 0.0.5-170
- Scrollbars now created in ScrollPane
- Moving Window visible member to widget
  To be used to hide ScrollBars
- ScrollPane::setScrollBarsVisbleStatus() implementation
- ScrollPane::is*ScrollbarNeeded() implemented
- ScrollPane::getMaxChildRight() and getMaxChildBottom() implemented
- Skin::getTitlebarHeight implementation
   used to compute Window::contentCorner
- TestWindow for Scrollpane
   X, Y  text inputs and add label button
- TextInput::getIntValue() implementation
- Making a enable-scrollpane-test option for configure
- Fix the Window's button bug
   Buttons are not in buttonList
- Window's resizeGrip is drawn below widgets
   Using reverse iterator
- Fixing QuadRenderer parent scissor bug
   Buttons drawns outside window when resizing it
   Window resize doesn't resize scrollopane
- Fixing window resizing bugs
- Fixing window moving bug
   Scissor rectangle seems to be not recompute
- Window's content drawn again
   widget's alpha was always 0 because settransparency() was overriden
   in ScrollPane with blank implementation (not using Container's 
   implementation)
- ScrollPane::draw() implementation
- Container implementation
   handles the child widgets events
- ScrollBarPolicy implementation
- ScrollPane contains 2 scrollbars   
- ScrollPane::addWidget implementation
- Homepage news :
   [title]Scrollbars implemented
   [content]Both horizontal and vertical scrollbars have been
   implemented. Next steps are ScrollPane, MultiColumnList and finally
   the server list game state. When all these widgets will be done, I
   will make a new release.

* v 0.0.5-169
- CurlServerModifClients unit test implementation
- Active HScrollBar handling
- HScrollBar::injectMouse() implementation
- ScrollPane uses QuadRenderer::setUseParentScissor()
- HScrollBat normal state drawn
- Documentation update (many undocumented members)
- Some Window functions become inline
- VScrollBar changes mouse pointer
- MousePointer handles VScrollBar images
- Making images for mouse cursor over VScrollBar
- VScrollBar work 
- Fix a bug in the ScrollBar parent handling
- SkinOverlay renamed Skin
- Fix some Doxygen warning
- Trying window's event handles declared inline OK
- SEGFAULT when whanging gamestate
- A mouse click on a window set it active and in foreground FIXED
- Window cannot be moved
- Some bugfixes when resizing a window
- Window handle callback using OgreGUICallbackType enumeration values

* v 0.0.5-168
- Removing SkinOverlay::setTransparency() and setCaptionTransparency()
- Removing SkinOverlay::createOverlay() and createCaption()  	
- Removing SkinOverlay::getOverlayByName( Ogre::String s )   	
- ScrollBar become a superClass
- SEGFAULT when coming back from gsConnection to gsMainMenu
   Many of SEGFAULT fixed during window removal
- data/gui/ogreGui/test.* removed
- A mouse over cursor for text edit
   Window::isMouseOverTextInput()
- Centered text drawn again
- Text background drawn using mColor
- Text background color uses global alpha
   Must set quadrenderer blend mode to QBM_ALPHA
- Check that QuadRenderer's HardwareVertexBuffer pointers are set to NULL
   It could makes the assertions failed if not.
- QuadRenderer::drawFilledRectangle
- TextSettings implements color setting and background color
- QuadRenderer text drawn again (Fix a bug)
- soBetaGui uses TextSettings
- TextSetting renderAligned() implementation
- QuadRenderer::drawText uses TextSettings
- TextSettings implementation
   A class that encapsulate Font, size, color(s), alignment
- Segfault : Setting a LOGA in Vector3.cpp
#0  0xb7dca898 in RainbruRPG::OgreGui::Vector3::operator= (this=0x74686769, 
    vVect=@0x83a68e8) at vector3.cpp:59
#1  0xb7db3b64 in RainbruRPG::OgreGui::GuiVertex::setPosition (
    this=0x74686769, vPos=@0x83a68e8) at guivertex.cpp:70
#2  0xb7dba0dc in RainbruRPG::OgreGui::QuadRenderer::addGlyph (this=0x8f7d6e0, 
    vRect=@0xbfb3dde0, vUV=@0xbfb3ddd0, vUVRelative=true)
    at quadrenderer.cpp:518
#3  0xb7dae8e9 in RainbruRPG::OgreGui::Font::render (this=0x846d688, 
    qr=0x8f7d6e0, vText=@0x83adc90, vColor=@0xbfb3df64, vPos=@0xbfb3de64, 
    vSelection=false, vSelectionStart=-1, vSelectionEnd=-1) at font.cpp:469
#4  0xb7daea6e in RainbruRPG::OgreGui::Font::renderAligned (this=0x846d688, 
    qr=0x8f7d6e0, vLineList=@0x846d6c0, vColor=@0xbfb3df64, vRect=@0xbfb3df74, 
    vVertAlign=RainbruRPG::OgreGui::VAT_CENTER, 
    vHorzAlign=RainbruRPG::OgreGui::HAT_LEFT, vSelection=false, 
    vSelectionStart=-1, vSelectionEnd=-1) at font.cpp:365
#5  0xb7daf98a in RainbruRPG::OgreGui::Font::renderAligned (this=0x846d688, 
    qr=0x8f7d6e0, text=@0xbfb3e004, color=@0xbfb3df64, rect=@0xbfb3df74, 
    wordwrap=false, vVertAlign=RainbruRPG::OgreGui::VAT_CENTER, 
    vHorzAlign=RainbruRPG::OgreGui::HAT_LEFT) at font.cpp:187
#6  0xb7db9c5f in RainbruRPG::OgreGui::QuadRenderer::drawText (this=0x8f7d6e0, 
    font=0x846d688, vColor=@0xbfb3df64, text=@0xbfb3e004, rect=@0xbfb3df74, 
    wordwrap=<value optimized out>, 
    vVertAlign=RainbruRPG::OgreGui::VAT_CENTER, 
    vHorzAlign=RainbruRPG::OgreGui::HAT_LEFT) at quadrenderer.cpp:420
#7  0xb7dc0b46 in RainbruRPG::OgreGui::soBetaGui::drawTitleBar (
    this=0x8ebdb00, qr=0x8f7d6e0, dim=@0xbfb3dff4, caption=@0xbfb3e004, 
    active=false) at sobetagui.cpp:236
#8  0xb7dca416 in RainbruRPG::OgreGui::TitleBar::draw (this=0x9817a50, 
    qr=0x8f7d6e0) at titlebar.cpp:72
#9  0xb7daaf77 in BetaGUI::Window::draw (this=0x9807978, qr=0x8f7d6e0)
    at bgwindow.cpp:415
#10 0xb7da58a7 in BetaGUI::GUI::draw (this=0x97201a8) at bggui.cpp:381
- QuadRenderer::checkHardwareBuffer to test HardwareBuffer

* v 0.0.5-167
- Font::getPass (and related stuff) removed
- Removing old text renderer 
- quadrenderer.h uses conditionnal compilation 
   if TEXT_RENDERING_USES_SET_TEXTURE is defined, we use a new text
   renderer using RendererSystem::_setTexture and vertices color
- Segfault in InputManager::capture(). Setting assert
0xb73fbe12 in std::_Rb_tree_increment () from /usr/lib/libstdc++.so.6
(gdb) bt
#0  0xb73fbe12 in std::_Rb_tree_increment () from /usr/lib/libstdc++.so.6
#1  0xb7dcd572 in RainbruRPG::Core::InputManager::keyPressed (this=0x80bb1a0, 
    e=@0xbfd58ad4) at /usr/include/c++/4.2/bits/stl_tree.h:183
#2  0xb6eff286 in OIS::LinuxKeyboard::_injectKeyDown (this=0x80bb230, 
    key=65307, text=27) at ./linux/LinuxKeyboard.cpp:341
#3  0xb6eff3bf in OIS::LinuxKeyboard::capture (this=0x80bb230)
    at ./linux/LinuxKeyboard.cpp:272
#4  0xb7dcd128 in RainbruRPG::Core::InputManager::capture (this=0x80bb1a0)
    at inputmanager.cpp:162
#5  0xb7dbf939 in RainbruRPG::Core::GameEngine::frameStarted (this=0x8059b20, 
    evt=@0xbfd58c44) at gameengine.cpp:835
#6  0xb7dd3ca5 in RainbruRPG::Events::GuiFrameListener::frameStarted (
    this=0x95a92a0, evt=@0xbfd58c44) at guiframelistener.cpp:63
#7  0xb7bd09f5 in Ogre::Root::_fireFrameStarted (this=0x8060608, 
    evt=@0xbfd58c44) at OgreRoot.cpp:625
#8  0xb7bd1057 in Ogre::Root::_fireFrameStarted (this=0x8060608)
    at OgreRoot.cpp:672
#9  0xb7bd1092 in Ogre::Root::renderOneFrame (this=0x8060608)
    at OgreRoot.cpp:748
#10 0xb7bd1121 in Ogre::Root::startRendering (this=0x8060608)
    at OgreRoot.cpp:741
#11 0xb7dc07ac in RainbruRPG::Core::GameEngine::run (this=0x8059b20)
    at gameengine.cpp:126
#12 0x08054879 in main (argc=1, argv=0xbfd58e14) at main.cpp:154
- editor, server and client main.cpp uses forward declarations
- server handles -h, --help, -V, --version command line options :
- editor handles -h, --help, -V, --version command line options :
- client handles -h, --help, -V, --version command line options :
- RainbruRPG manpage update
- Masked Textinput implementation
- Rename Window::mAB 
- Activating a textinput deactivate others
   void Window::deactivateAllOtherWindow(BetaGUI::TextInput*) implementation
- TextInput drawn again using QuadRenderer
- bool TextInput::active, activate() and deactivate() implementation
- Removing TextInput Overlays and materials related var and fucntions
- Label drawn again using QuadRenderer
- SkinOverlay::drawLabel virtual function defined
- Making move cursor more coherent with arrow one
- Making resize cursor more coherent with arrow one
- Resizing window uses movingDevX and movingDevY

* v 0.0.5-166
- Doxygen documentation updated
- A bug when moving window (movingDevX and movingDevY are spurious)
- Widget move and resize implementation   
   Already implemented in Window
- skin::drawpushbutton uses corner
- widget's corners implementation
- MouseCursor disappear if coordonates < 0  FIXED
- MouseCursor handles moving window
- Trying text rendering with 2 TextureUnitState FAILED
- Draw again the text without cub in window alpha
   o Testing in QuadRenderer::drawText()
- Fix the Window global alpha bug OK
- When switching to network game (SEGFAULT) FIXED
- Trying to solve a segfault
   A lot of work for making it work. It is due to mBatchPointer which
   should lock the HarwareVertexBuffer but in QuadRenderer::addGlyph, 
   sometimes HarwareVertexBuffer is not locked.
- GuiVertex class implementation
- Vector3 implementation
- Deleting Window::rootOverlay
- QuadRenderer::drawText() take alignment parameters
   Font::renderAligned() LineInfoList take aligment parameters
- Drawing PushButton
- SkinOverlay::drawPushButton() now take a bool active argument
- Remove QuadRenderer::setMaterialName()
   o Uniquely use QuadRenderer::setTexturePtr
- In QuadRenderer::addGlyph(), setting an assertion on the verts
   pointer

* v 0.0.5-165
- Window posision cannot be negative
- We should deactivate all window's titlebar but the first when one is
   activated
- GUI should handles mouse injection from foreground to background
   windows using reverse iterator (rbegin() and rend())
- Makes the window in foreground if selected
- Mouse pointer is more grey than white
- Makes the mouse cursor always in foreground
   It passes under windows
   Mouse cursor is an ogre overlay
- Removing GUI/mouseCursorOverlay
- GUI/drawMouseCursor uses QuadRenderer::setTexturePtr to draw it
- QuadRenderer handles BlendMode
- MousePointer class implementation
- Launching mouse cursor drawing in ogreGui/renderqueuelistener.cpp
- GUI/createMouseCursor() load the cursor texture
- Fix an alpha bug in text rendering (shadows below text)
   FIXED using LBX_MODULATE instead of LBX_BLEND_MANUAL
- Setting global GUI alpha to QuadRenderer::drawText
- Setting color to QuadRenderer::drawText
- QuadRenderer::drawText take a bool wordwrap argument
- Text rendering uses alpha blending
- Fix vertical alignment of text
- Setting correct texture to glyph quads
   Testing in Font::render()
   FontManager::copyGlyph hacked
   Testing glyph construction fontmanager
- Debugging Glyph uvMap
   o QuadRenderer::addGlyph

* v 0.0.5-164
- Text is written from right to left
   Glyph's space is <0
   o Testing in FontManager::renderGlyphs
- Fix the placement bug of the first letter
   o Font::render, vPos is correct
   o QuadRenderer::addGlyph, vRect is correct
   o Debugging QuadRenderer::getFinalRect OK
- QuadRenderer correctly handles mFlipY
- TitleBar caption are too far on the right/bottom 
   HACKED in Font::render
- QuadRenderer::addGlyph segfault FIXED
#0  0xb7e2bc1e in RainbruRPG::OgreGui::QuadRenderer::addGlyph (this=0x8b0cac8, 
    vRect=@0xbff3ba1c, vUV=@0xbff3ba0c, vUVRelative=true)
    at /usr/include/OGRE/OgreVector3.h:123
#1  0xb7e22968 in RainbruRPG::OgreGui::Font::render (this=0x9587558, 
    qr=0x8b0cac8, vText=@0x92873f0, vColor=@0x8b0cb70, vPos=@0xbff3ba94, 
    vSelection=false, vSelectionStart=-1, vSelectionEnd=-1) at font.cpp:492
#2  0xb7e22ad8 in RainbruRPG::OgreGui::Font::renderAligned (this=0x9587558, 
    qr=0x8b0cac8, vLineList=@0x958759c, vColor=@0x8b0cb70, vRect=@0xbff3bb6c, 
    vSelection=false, vSelectionStart=-1, vSelectionEnd=-1) at font.cpp:384
- TitleBar::caption doesn't follow its parent    
   FIXED :  setting default value to vVertAlign and vHorzAlign in
     Font::renderAligned
   Font::renderAligned debug rectangle
   Testing coords in soBetaGui::drawTitleBar() no changes
- removing existing debugRectangle function
- maincore/dumpogreobject.h/.cpp to debug Ogre objects
   test in soBetaGui::drawTitleBar
- GNU headers updated for 2008
- Homepage news :
Title :Switched to Ogre 1.4
Content :[cite]RainbruRPG[/cite] switched from Ogre 1.2 to Ogre 1.4 and CEGUI was definitely give up. Consequently, [cite]RainbruRPG[/cite] building on GNU/Linux platform is easier because Ogre 1.4 is in the official Debian repository.[br]
[br]
OgreGui is not yet done but a new release will follow its implementation.[br]
[br]
Note : I recently fixed a bug in the artcles section of this site that heavily compromize copy/paste operations on code blocks.[br]
[br]
Links :
[href a="http://packages.debian.org/fr/sid/libogre14"]libOgre14 in the debian repository[/href]
- Making mouse work again
   InputManager get a bad window handle
- Dynamic menu deactivated (conditionnal compilation)
- StaticImage::setPosition(x,y);
- Drawing menu background and border (gsMenuBase)
   o Using StaticImage widget for OgreGui::StaticImage
- OgreGui::StaticImage widget implementation
- gsMenuBase::drawMenu??? now called createMenu...
- Switching to Ogre 1.4
   o Using libOgre found in the Debian Etch repository
   o Many modifications are needed
   o Removing CEGUI dependencies
- Font texturing debug mode fixed
- Computing page number of documentation for regText.html
- Doxygen documentation

* v 0.0.5-163
- Implement Font::addGlyph(index, Glyph*);
- Font::getGlyphMap return a constant
- Font destructor clears glyphMap
- Font::getGlyph debug
   o mGlyphMap.size()==0
- Glyp::getWidth()/getHeight() return 0
   o Adding charcode to glyph to debug it
- Debugging QuadRenderer::getFinalRect
     called from buildVertices()
       called from addGlyph()
         called from Font::render()
   o Using xPixelToNative and yPixelToNative
   o vIn seems to be spurious

   o Testing if Glyp::getWidth()/getHeight() do not return 0
   o Glyphs created from FontManager::renderGlyphs ()
- Drawing a test caption for TitleBar
   o Stack : 
   QuadRenderer::drawText()        called
   Font::renderAligned             textWidth         OK
   Font::processText               LineInfoList.size OK
                                   vText.size        OK
   Font::renderAligned(LineInfo)   
   Font::Render                    vText.size        OK
   QuadRenderer::getFinalRect      vOut must be fixed
- QuadRenderer::drawText() implementation
- QuadRenderer::renderGlyph() implementation
- QuadRenderer::addGlyph() implementation
- Font::render() implementation
- common/rainbrudef implements GCC visibility
- Homepage news :
   Title: Changing OgreGUI renderer
   Content: I'm changing the OgreGUI renderer from Ogre overlays to
   custom texturized quads. Due to scrollpane implementation, I need 
   scissor handle and Ogre overlays do not provide this feature.

   The new renderer will be based on the Right Brain Games UI, a GPLed 
   library used in the Antilia project.

   This renderer will also support Unicode providing the ability, for 
   further releases, of translation through GNU getText.

   Links :
   Right Brain Games UI
   GNU gettext
   Unicode
- Font::renderAligned(LineInfoList) implementation
- Font::processText implementation
- LineInfo become a class
- QuadRenderer::drawRectangle() implementation
- Skins use drawRectangle instead of draw
- Define DEBUG_FONT_TEXTURE 1 and DEBUG_FONT_NAME in FontManager to
  test in soBetaGui if we should test the given font texture.
  o The etsted texture will be set to the window background for test 
    purpose
- OgreGUI/FontManager::copyGlyph implementation
- OgreGUI/FontManager::renderGlyphs implementation
- OgreGUI/FontManager::loadFont implementation

* v 0.0.5-162
- Glyph base implementation
- TitleBar drawn by QuadRenderer
- active ResizeGrip drawn 
- ResizeGrip drawn by QuadRenderer
- Window drawn by QuadRenderer
- OgreGuiRenderQueueListener registered to GameEngine's SceneManager
- QuadRenderer now here
- Position and size only in widget
- OgreGUI now linked with sigc++
- Scrollbar::moveCursorToValue(void) implementation
- Scrollbar::getValueFromCursor(void) implementation
- Scrollbar max ans steps implementation
- Scrollbar widget implementation
- Adding Widget mouse support to Window's event handling loop
- Widget::injectMouse implementation
- Window destructor
  o As ResizeGrip does not need a caption, it does not use the 
    Button::mCP. The pointer is NULL and the Button::~Button
    destructor, trying to call mCP->getParent() made a segmentation 
    fault.                         FIXED
- Button destructor is virtual and ResizeGrip destructor is
   implemented to avoid a segfault in accessing mCP->getParent()
- Testing number of registered window in GUI::addWindow()
- TextInput::setMasked(true) implementation

* v 0.0.5-161
- gsCreateAccount buttons implementation
- gsCreateAccount uses betaGUI
- At sign bug fixed
- GuiManager::showMessageBox doesn't need anymore a parent parameter
- Doxygen documentation : fix undocumented members
- Dialog handles its border transparency
- OgreGUI dialog has its own border
- Makes the dialog prioritary on mouse click
  o Using a push_front instead of push_back in BGGui::windowList
- Minor Skin bug fixed
- MessageBox::setMessage() implementation
- MessageBox::setTitle() implementation
- Makes OgreGUI dialog centered
- SkinOverlay::createBorderWindow renamed SkinOverlay::createDialog
- OgreGUI dialog uses its own Ogre::Overlay (zorder difference)
- Removes DialogSystem from repository
- Avoid maincore::MessageBox inheritage of DialogSystem
- soBetaGui::createBorderWindow implementation
- Skin::createBorderWindow declaration
- Window constructor
  A bool saying if it is a framed window or not
- gsConnection::onConnectClicked uses OgreGUI
  Name and password values are now taken from the OgreGUI widgets

* v 0.0.5-160
- Doxygen documentation
  o Fix undocumented members (mainly soNavigation)
  o Error when generating Doxygen documentation in PNG image format
  Switching to jpg images fix it
- New SkinId : OSI_PARENT for inherited skin identifier
  All widgets now inherits their SkinId from their parent
  but this can be changed from a constructor parameter
- Mouse button comes again :(
   FIXED in GameEngine::mousePressed()
- gsMainMenu buttons bug
  o buttons don't get mouse click event
  gsMenuBase::mousePressed must call BGGUI::injectMouse
- Moving Window bug :
  o When we click the 'Network Game" button of gsMainMenu
  we go to the gsConnection state and the Connection window
  is moving without left mouse button is clicked.
  o FIXED : please see gsMenuBase::transition() implementation for
  further details.
  o When we go back from gsConnection to gsMainMenu, the bug happens again
  -> Trying to use isMouseBouttonPressed as static member
  -> isMouseBouttonPressed now in BetaGUI::GUI
- Transparency transition bug
  o When going from gsConnection to gsMainMenu, gsConnection is fade
  in and then reappears
  o The transparency is correctly set in gsMainMenu
  o GUI::setGuiTransparency receive >0.7f values
  o GuiManager::increaseGuiTransparency send bad values (>0.7f)
  o guimanager.cpp:338 A hack that fixes this bug
- gsConnection uses betaGUI
- gsMenuBase menu overlays now create on their own overlay
  They was added to the BetaGUI overlay, but for a ZOrder issue 
  (gsConnection's Back button was hidden by numDebugWindow) I create
  their own one.
- Window::alwaysTransparent() implementation
- soNavigation implementation
- Images nav.button and nav.button.active created
- Some memory leaks fixed (with valgring)
- are -lIL -lILU -lILUT mandatory in aclocal ? NO
  To fix the JPG texture bug, use -ljpeg
- JPG texture bug fixed
  Adding libjpeg to the client seems to fix it. Trying to remove
  -lIL -lILU -lILUT.
- Try to use PKG_CHECK_MODULES in configure
  Do not assume anymore libraries are in /usr/local/lib
- soBetaGUI : fnTextInput and fsTextInput replaced by fnCaption and
  fsCaption to be used by TextInput::caption and Label
- A Label widget for static text caption
  It does not provide a frame or background. Only text.
- gsMainMenu uses betaGUI
- editor/Makefile.am updated to be linked with ogreGUI

* v 0.0.5-159
- Window::minimalSize implementation. To prevent extreme high
  value of unsigned int width and height.
- Window moving using devX and devY to prevent the move of the window
  only from the middle of its width
- Fix the moving Window bug  
- Find the resize bug and use a flag
  The mouse event are sent to the GUI object so, the flag must be in
  GUI. We get a resizedWindow field in GUI which is NULL if no window
  is moving. Otherwise, it is a pointer to the mocing window.
- OgreGUI now depends on MainCore (Ogre)
- Doxygen documentation update due to skin update
  Widget, SkinOverlay, doc.h due to a Skin reference
  refman.pdf = 1251 pages
- Widget are now only based on Ogre::Overlay
  For performance issues due to Ogre::String identifier
   I must give up skin.h and keep only skinOverlay based skin
  The skinOverlay function that get a String identifier will now
   use a OgreOverlay parameter
  Widget will manage their OverlayContainer pointers
  Worst FPS with String ID are 94-99
- SkinOverlay::setCaptionTransparency get a OverlayContainer parameter
  In the Button subclasses we *must* reimplement setTransparency
  because of ResizeGrip that do not have a caption.
- SkinOverlay::setTransparency get a OverlayContainer parameter
- The Skin class doesn't exist anymore
  To switch to overlay-based skins, the Skin class is gave up.
- Homepage new about the skin implementation
  Title : Switching to overlay-based skins
  Content : Because of a lack of performance, I must change the
   OgreGUI skin design. Skins wer implemented with the idea we could 
   use anoter graphical ojects than Ogre overlays and it was a bad idea.
   [br]
   [br]I will modify this design to base the skins implementation only 
   on Ogre overlays. This should increase performance by using overlay 
   pointers instead os String identifier.
   [br]
   [br]This will delay the next public release but this design error 
   should be fastly fixed.
- Doxygen documentation 
  After : refman.pdf = 1259 pages
  common/LanguageListItem improved
  npFlooder0004 improved
  Applied to the GUI transparency
  tools/xident/ServerDesc documentation improved
  tools/xident/ServerTechNote documentation improved
  Before : refman.pdf = 1257 pages
- GUI fading includes caption
  Skin::setCaptionTransparency handles caption's alpha
  Skin::satTransparency handles standard overlays's one
- Overlay's caption fading
  OK by setting a color with Alpha channel to Ogre::TextAreaOverlayElement
- Ogre::Overlay fading ok but caption's bug
- BetaGUI::GUI clean up
- Callback type become an enumeration
- TextInput constructor doesn't need a material name anymore
- Using Shift (to upper- case) in a TextInout doesn't work   FIXED
- Textinput text entry comes back
- Implement correctly TextInput's caption

* v 0.0.5-158
- MouseOver doesn't work anymore on PushButton
- Remove Ogre::material references in Button
- MouseOver work on ResizeGrip
- Button and TitleBar : Using real caption instead of dummy text
- changelog.pre100 gzipped
- Skin draws Button's and TitleBar's caption
- GiveUp Button graphical functions
- No more left black border in dynamic menu
- OgreGUI's Button delegates drawing to Skin
- A PushButton class subclassing Button
- TitleBar use Skin to draw itself
- ResizeGrip use Skin to draw itself
- Fix the refman inputenc error (OK if using pdflatex)
- Add Doxygen documentation's pdf page number to the regTests (793)
- regText from build 0  to build 149 in a separate documentation page
- TitleBar widget overriding Button
- A resizeGrip widget overringing button
- SkinOverlay::createOverlay function used by soBetaGui::createWindow
- Trying title border in fullscreen : OK
- title overlay border
- gsMenuBase dynamic menu comes back

* v 0.0.5-157
- static, dynamic menu and border drawn again
- OgreGUI's window delegates drawing to Skin
- bggui.h::wt become OgreGuiWindowType (prefix is OWT)
- doxygen Documentation
- skin name implementation
- SkinOverlay and soBetaGUI skins implementation
- OgreGUI's Object used by Callback Listener and Widget
- GameEngine initialise skinManager
- Skin base class
- A singleton class ogreGui/SkinManager
- Doxygen documentation
- BetaGUI::Callback in .h/.cpp
- BetaGUI::Window in .h/.cpp
- BetaGUI::GUI in .h/.cpp

* v 0.0.5-156
- Logo and menu of homepage now centered
- remove gsMainMenu dependencies to CEGUI
- Hide window in gsMainMenu pause
- gsMainMenu handles betaGui events (for buttons)
- gsMainMenu uses betaGUI
- Adds OgreGui datafiles in data/gui/ogreGui
- gsmenubase injects keyboard input to OgreGUI
- gsmenubase injects mouse input to OgreGUI
- rainbrurpg-ogregui library for BetaGUI
- BetaGUI code in the ogreGui/ directory and to the cvs repository
- OgreGui namespace documentation
- common/ dll successfully cross compiled
- client cross compilation's -lOgreMain error fixed
- MesageBox renamed RbMessageBox
- lib rainbrurpg-common cross-compiled
- GNU/Linux and mingw versions are the same
  We choose the compilation with bootstrap/bootstrap.win32
- cross compilation dependencies found or self-compiled

* v 0.0.5-155
- Sourceforge homepage improvement
- Sourceforge homepage articles
- Ruby on rails test

* v 0.0.5-154
- comleteBackup
- New homepage for sourceforge.net
- EasyBMP uses logger
- XIdent need a user/pwd
- decent documentation for FtpServer
- Using forward declarations for some classes
- InputManager in a namespace RainbruRPG::Core
- Removing XML output for Unitest
- UnitTest fails because we can't confirm mail               FIXED
- CurlAccountConfirmMail send ConfirmId

* v 0.0.5-153
- Doxygen documentation
- tools uses ServerListItem class
- Setting servers number in gsServerrList
- gsServerList uses ServerListItem class
- Create a ServerListItem class to replace tServerListItem
- changeServerAct.php servers.xml link broken                FIXED
- removing CurlProgressFunction
- removing defaultwritefunction.h
- CurlGetFile now use default Curl write function
- Test the whole account creation process                    OK
- Adminsite : directory structure modified
- Removing data/3d/ content
- mailconfirm.php uses mail id for confirmation
- addplayer.php send a confirmation mail (need sendmail)
- Cleaning IttClient/
- TinyXML and EasyBMP licenses are compatible with GPLv3
- Fix the tools-hashsum pb                                   FIXED

* v 0.0.5-152
- Doxygen documentation
- Remove curlget.xml in CurlGetFile destructor
- DEGUB option deactivate the GuiManager::debugWindow
- ./configure DEBUG option should disable debug window
- ./configure DEBUG option disable LOGI and local website
- Quarantine alert misfunction
- A segfault in MultiColumnList    FIXED (please see
   KeyboardNavigation::onListKeyDown() implementation for details)
- TabNavigation PageUp, PageDown implementation
- TabNavigation Home and End implementation
- TabNavigation become KeyboardNavigation
- TabNavigation documentation
- The TabNavigation list enter event name is in a #define
- TabNavigation::addMultiColumnList(std::string) manage the key
   selection
- Remove curlInterface setFilename and getFilename
- xml?????::getXMLTextFromName are several times implemented
- Many xml?????list should become subclasses of CurlFileToXml
- Doxygen documentation

* v 0.0.5-151
- ServerList : key moving manage scrollbar
- ServerList : up and down arrows to select one
- gsServerList tabOrder implementation
- gsServerList buttons implementation
- Feed gsServerList
- gsServerList implementation
- The localtest doesn't found title overlay if we come from the
  netgame menu (it doesn't exist anymore)
- GuiManager::detroyTitleOverlay renamed GuiManager::destroyTitleOverlay
- gsconnect : test if username is empty
- Using Alt+key more than one time doesn't work
- Manage Home and End keys in edit box
- Enter mail address wuth Alt key is a char                 FIXED
- gsCreateAccount submit button
- Including formulas in vcConstant documentation
- gsMenuBase::setupTabOrder(and subclasses) implementation
- tabNavigation::reset()
