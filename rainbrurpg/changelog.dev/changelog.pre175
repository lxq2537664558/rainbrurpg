
* v 0.0.5-165
- Window posision cannot be negative
- We should deactivate all window's titlebar but the first when one is
   activated
- GUI should handles mouse injection from foreground to background
   windows using reverse iterator (rbegin() and rend())
- Makes the window in foreground if selected
- Mouse pointer is more grey than white
- Makes the mouse cursor always in foreground
   It passes under windows
   Mouse cursor is an ogre overlay
- Removing GUI/mouseCursorOverlay
- GUI/drawMouseCursor uses QuadRenderer::setTexturePtr to draw it
- QuadRenderer handles BlendMode
- MousePointer class implementation
- Launching mouse cursor drawing in ogreGui/renderqueuelistener.cpp
- GUI/createMouseCursor() load the cursor texture
- Fix an alpha bug in text rendering (shadows below text)
   FIXED using LBX_MODULATE instead of LBX_BLEND_MANUAL
- Setting global GUI alpha to QuadRenderer::drawText
- Setting color to QuadRenderer::drawText
- QuadRenderer::drawText take a bool wordwrap argument
- Text rendering uses alpha blending
- Fix vertical alignment of text
- Setting correct texture to glyph quads
   Testing in Font::render()
   FontManager::copyGlyph hacked
   Testing glyph construction fontmanager
- Debugging Glyph uvMap
   o QuadRenderer::addGlyph

* v 0.0.5-164
- Text is written from right to left
   Glyph's space is <0
   o Testing in FontManager::renderGlyphs
- Fix the placement bug of the first letter
   o Font::render, vPos is correct
   o QuadRenderer::addGlyph, vRect is correct
   o Debugging QuadRenderer::getFinalRect OK
- QuadRenderer correctly handles mFlipY
- TitleBar caption are too far on the right/bottom 
   HACKED in Font::render
- QuadRenderer::addGlyph segfault FIXED
#0  0xb7e2bc1e in RainbruRPG::OgreGui::QuadRenderer::addGlyph (this=0x8b0cac8, 
    vRect=@0xbff3ba1c, vUV=@0xbff3ba0c, vUVRelative=true)
    at /usr/include/OGRE/OgreVector3.h:123
#1  0xb7e22968 in RainbruRPG::OgreGui::Font::render (this=0x9587558, 
    qr=0x8b0cac8, vText=@0x92873f0, vColor=@0x8b0cb70, vPos=@0xbff3ba94, 
    vSelection=false, vSelectionStart=-1, vSelectionEnd=-1) at font.cpp:492
#2  0xb7e22ad8 in RainbruRPG::OgreGui::Font::renderAligned (this=0x9587558, 
    qr=0x8b0cac8, vLineList=@0x958759c, vColor=@0x8b0cb70, vRect=@0xbff3bb6c, 
    vSelection=false, vSelectionStart=-1, vSelectionEnd=-1) at font.cpp:384
- TitleBar::caption doesn't follow its parent    
   FIXED :  setting default value to vVertAlign and vHorzAlign in
     Font::renderAligned
   Font::renderAligned debug rectangle
   Testing coords in soBetaGui::drawTitleBar() no changes
- removing existing debugRectangle function
- maincore/dumpogreobject.h/.cpp to debug Ogre objects
   test in soBetaGui::drawTitleBar
- GNU headers updated for 2008
- Homepage news :
Title :Switched to Ogre 1.4
Content :[cite]RainbruRPG[/cite] switched from Ogre 1.2 to Ogre 1.4 and CEGUI was definitely give up. Consequently, [cite]RainbruRPG[/cite] building on GNU/Linux platform is easier because Ogre 1.4 is in the official Debian repository.[br]
[br]
OgreGui is not yet done but a new release will follow its implementation.[br]
[br]
Note : I recently fixed a bug in the artcles section of this site that heavily compromize copy/paste operations on code blocks.[br]
[br]
Links :
[href a="http://packages.debian.org/fr/sid/libogre14"]libOgre14 in the debian repository[/href]
- Making mouse work again
   InputManager get a bad window handle
- Dynamic menu deactivated (conditionnal compilation)
- StaticImage::setPosition(x,y);
- Drawing menu background and border (gsMenuBase)
   o Using StaticImage widget for OgreGui::StaticImage
- OgreGui::StaticImage widget implementation
- gsMenuBase::drawMenu??? now called createMenu...
- Switching to Ogre 1.4
   o Using libOgre found in the Debian Etch repository
   o Many modifications are needed
   o Removing CEGUI dependencies
- Font texturing debug mode fixed
- Computing page number of documentation for regText.html
- Doxygen documentation

* v 0.0.5-163
- Implement Font::addGlyph(index, Glyph*);
- Font::getGlyphMap return a constant
- Font destructor clears glyphMap
- Font::getGlyph debug
   o mGlyphMap.size()==0
- Glyp::getWidth()/getHeight() return 0
   o Adding charcode to glyph to debug it
- Debugging QuadRenderer::getFinalRect
     called from buildVertices()
       called from addGlyph()
         called from Font::render()
   o Using xPixelToNative and yPixelToNative
   o vIn seems to be spurious

   o Testing if Glyp::getWidth()/getHeight() do not return 0
   o Glyphs created from FontManager::renderGlyphs ()
- Drawing a test caption for TitleBar
   o Stack : 
   QuadRenderer::drawText()        called
   Font::renderAligned             textWidth         OK
   Font::processText               LineInfoList.size OK
                                   vText.size        OK
   Font::renderAligned(LineInfo)   
   Font::Render                    vText.size        OK
   QuadRenderer::getFinalRect      vOut must be fixed
- QuadRenderer::drawText() implementation
- QuadRenderer::renderGlyph() implementation
- QuadRenderer::addGlyph() implementation
- Font::render() implementation
- common/rainbrudef implements GCC visibility
- Homepage news :
   Title: Changing OgreGUI renderer
   Content: I'm changing the OgreGUI renderer from Ogre overlays to
   custom texturized quads. Due to scrollpane implementation, I need 
   scissor handle and Ogre overlays do not provide this feature.

   The new renderer will be based on the Right Brain Games UI, a GPLed 
   library used in the Antilia project.

   This renderer will also support Unicode providing the ability, for 
   further releases, of translation through GNU getText.

   Links :
   Right Brain Games UI
   GNU gettext
   Unicode
- Font::renderAligned(LineInfoList) implementation
- Font::processText implementation
- LineInfo become a class
- QuadRenderer::drawRectangle() implementation
- Skins use drawRectangle instead of draw
- Define DEBUG_FONT_TEXTURE 1 and DEBUG_FONT_NAME in FontManager to
  test in soBetaGui if we should test the given font texture.
  o The etsted texture will be set to the window background for test 
    purpose
- OgreGUI/FontManager::copyGlyph implementation
- OgreGUI/FontManager::renderGlyphs implementation
- OgreGUI/FontManager::loadFont implementation

* v 0.0.5-162
- Glyph base implementation
- TitleBar drawn by QuadRenderer
- active ResizeGrip drawn 
- ResizeGrip drawn by QuadRenderer
- Window drawn by QuadRenderer
- OgreGuiRenderQueueListener registered to GameEngine's SceneManager
- QuadRenderer now here
- Position and size only in widget
- OgreGUI now linked with sigc++
- Scrollbar::moveCursorToValue(void) implementation
- Scrollbar::getValueFromCursor(void) implementation
- Scrollbar max ans steps implementation
- Scrollbar widget implementation
- Adding Widget mouse support to Window's event handling loop
- Widget::injectMouse implementation
- Window destructor
  o As ResizeGrip does not need a caption, it does not use the 
    Button::mCP. The pointer is NULL and the Button::~Button
    destructor, trying to call mCP->getParent() made a segmentation 
    fault.                         FIXED
- Button destructor is virtual and ResizeGrip destructor is
   implemented to avoid a segfault in accessing mCP->getParent()
- Testing number of registered window in GUI::addWindow()
- TextInput::setMasked(true) implementation

* v 0.0.5-161
- gsCreateAccount buttons implementation
- gsCreateAccount uses betaGUI
- At sign bug fixed
- GuiManager::showMessageBox doesn't need anymore a parent parameter
- Doxygen documentation : fix undocumented members
- Dialog handles its border transparency
- OgreGUI dialog has its own border
- Makes the dialog prioritary on mouse click
  o Using a push_front instead of push_back in BGGui::windowList
- Minor Skin bug fixed
- MessageBox::setMessage() implementation
- MessageBox::setTitle() implementation
- Makes OgreGUI dialog centered
- SkinOverlay::createBorderWindow renamed SkinOverlay::createDialog
- OgreGUI dialog uses its own Ogre::Overlay (zorder difference)
- Removes DialogSystem from repository
- Avoid maincore::MessageBox inheritage of DialogSystem
- soBetaGui::createBorderWindow implementation
- Skin::createBorderWindow declaration
- Window constructor
  A bool saying if it is a framed window or not
- gsConnection::onConnectClicked uses OgreGUI
  Name and password values are now taken from the OgreGUI widgets

* v 0.0.5-160
- Doxygen documentation
  o Fix undocumented members (mainly soNavigation)
  o Error when generating Doxygen documentation in PNG image format
  Switching to jpg images fix it
- New SkinId : OSI_PARENT for inherited skin identifier
  All widgets now inherits their SkinId from their parent
  but this can be changed from a constructor parameter
- Mouse button comes again :(
   FIXED in GameEngine::mousePressed()
- gsMainMenu buttons bug
  o buttons don't get mouse click event
  gsMenuBase::mousePressed must call BGGUI::injectMouse
- Moving Window bug :
  o When we click the 'Network Game" button of gsMainMenu
  we go to the gsConnection state and the Connection window
  is moving without left mouse button is clicked.
  o FIXED : please see gsMenuBase::transition() implementation for
  further details.
  o When we go back from gsConnection to gsMainMenu, the bug happens again
  -> Trying to use isMouseBouttonPressed as static member
  -> isMouseBouttonPressed now in BetaGUI::GUI
- Transparency transition bug
  o When going from gsConnection to gsMainMenu, gsConnection is fade
  in and then reappears
  o The transparency is correctly set in gsMainMenu
  o GUI::setGuiTransparency receive >0.7f values
  o GuiManager::increaseGuiTransparency send bad values (>0.7f)
  o guimanager.cpp:338 A hack that fixes this bug
- gsConnection uses betaGUI
- gsMenuBase menu overlays now create on their own overlay
  They was added to the BetaGUI overlay, but for a ZOrder issue 
  (gsConnection's Back button was hidden by numDebugWindow) I create
  their own one.
- Window::alwaysTransparent() implementation
- soNavigation implementation
- Images nav.button and nav.button.active created
- Some memory leaks fixed (with valgring)
- are -lIL -lILU -lILUT mandatory in aclocal ? NO
  To fix the JPG texture bug, use -ljpeg
- JPG texture bug fixed
  Adding libjpeg to the client seems to fix it. Trying to remove
  -lIL -lILU -lILUT.
- Try to use PKG_CHECK_MODULES in configure
  Do not assume anymore libraries are in /usr/local/lib
- soBetaGUI : fnTextInput and fsTextInput replaced by fnCaption and
  fsCaption to be used by TextInput::caption and Label
- A Label widget for static text caption
  It does not provide a frame or background. Only text.
- gsMainMenu uses betaGUI
- editor/Makefile.am updated to be linked with ogreGUI

* v 0.0.5-159
- Window::minimalSize implementation. To prevent extreme high
  value of unsigned int width and height.
- Window moving using devX and devY to prevent the move of the window
  only from the middle of its width
- Fix the moving Window bug  
- Find the resize bug and use a flag
  The mouse event are sent to the GUI object so, the flag must be in
  GUI. We get a resizedWindow field in GUI which is NULL if no window
  is moving. Otherwise, it is a pointer to the mocing window.
- OgreGUI now depends on MainCore (Ogre)
- Doxygen documentation update due to skin update
  Widget, SkinOverlay, doc.h due to a Skin reference
  refman.pdf = 1251 pages
- Widget are now only based on Ogre::Overlay
  For performance issues due to Ogre::String identifier
   I must give up skin.h and keep only skinOverlay based skin
  The skinOverlay function that get a String identifier will now
   use a OgreOverlay parameter
  Widget will manage their OverlayContainer pointers
  Worst FPS with String ID are 94-99
- SkinOverlay::setCaptionTransparency get a OverlayContainer parameter
  In the Button subclasses we *must* reimplement setTransparency
  because of ResizeGrip that do not have a caption.
- SkinOverlay::setTransparency get a OverlayContainer parameter
- The Skin class doesn't exist anymore
  To switch to overlay-based skins, the Skin class is gave up.
- Homepage new about the skin implementation
  Title : Switching to overlay-based skins
  Content : Because of a lack of performance, I must change the
   OgreGUI skin design. Skins wer implemented with the idea we could 
   use anoter graphical ojects than Ogre overlays and it was a bad idea.
   [br]
   [br]I will modify this design to base the skins implementation only 
   on Ogre overlays. This should increase performance by using overlay 
   pointers instead os String identifier.
   [br]
   [br]This will delay the next public release but this design error 
   should be fastly fixed.
- Doxygen documentation 
  After : refman.pdf = 1259 pages
  common/LanguageListItem improved
  npFlooder0004 improved
  Applied to the GUI transparency
  tools/xident/ServerDesc documentation improved
  tools/xident/ServerTechNote documentation improved
  Before : refman.pdf = 1257 pages
- GUI fading includes caption
  Skin::setCaptionTransparency handles caption's alpha
  Skin::satTransparency handles standard overlays's one
- Overlay's caption fading
  OK by setting a color with Alpha channel to Ogre::TextAreaOverlayElement
- Ogre::Overlay fading ok but caption's bug
- BetaGUI::GUI clean up
- Callback type become an enumeration
- TextInput constructor doesn't need a material name anymore
- Using Shift (to upper- case) in a TextInout doesn't work   FIXED
- Textinput text entry comes back
- Implement correctly TextInput's caption

* v 0.0.5-158
- MouseOver doesn't work anymore on PushButton
- Remove Ogre::material references in Button
- MouseOver work on ResizeGrip
- Button and TitleBar : Using real caption instead of dummy text
- changelog.pre100 gzipped
- Skin draws Button's and TitleBar's caption
- GiveUp Button graphical functions
- No more left black border in dynamic menu
- OgreGUI's Button delegates drawing to Skin
- A PushButton class subclassing Button
- TitleBar use Skin to draw itself
- ResizeGrip use Skin to draw itself
- Fix the refman inputenc error (OK if using pdflatex)
- Add Doxygen documentation's pdf page number to the regTests (793)
- regText from build 0  to build 149 in a separate documentation page
- TitleBar widget overriding Button
- A resizeGrip widget overringing button
- SkinOverlay::createOverlay function used by soBetaGui::createWindow
- Trying title border in fullscreen : OK
- title overlay border
- gsMenuBase dynamic menu comes back

* v 0.0.5-157
- static, dynamic menu and border drawn again
- OgreGUI's window delegates drawing to Skin
- bggui.h::wt become OgreGuiWindowType (prefix is OWT)
- doxygen Documentation
- skin name implementation
- SkinOverlay and soBetaGUI skins implementation
- OgreGUI's Object used by Callback Listener and Widget
- GameEngine initialise skinManager
- Skin base class
- A singleton class ogreGui/SkinManager
- Doxygen documentation
- BetaGUI::Callback in .h/.cpp
- BetaGUI::Window in .h/.cpp
- BetaGUI::GUI in .h/.cpp

* v 0.0.5-156
- Logo and menu of homepage now centered
- remove gsMainMenu dependencies to CEGUI
- Hide window in gsMainMenu pause
- gsMainMenu handles betaGui events (for buttons)
- gsMainMenu uses betaGUI
- Adds OgreGui datafiles in data/gui/ogreGui
- gsmenubase injects keyboard input to OgreGUI
- gsmenubase injects mouse input to OgreGUI
- rainbrurpg-ogregui library for BetaGUI
- BetaGUI code in the ogreGui/ directory and to the cvs repository
- OgreGui namespace documentation
- common/ dll successfully cross compiled
- client cross compilation's -lOgreMain error fixed
- MesageBox renamed RbMessageBox
- lib rainbrurpg-common cross-compiled
- GNU/Linux and mingw versions are the same
  We choose the compilation with bootstrap/bootstrap.win32
- cross compilation dependencies found or self-compiled

* v 0.0.5-155
- Sourceforge homepage improvement
- Sourceforge homepage articles
- Ruby on rails test

* v 0.0.5-154
- comleteBackup
- New homepage for sourceforge.net
- EasyBMP uses logger
- XIdent need a user/pwd
- decent documentation for FtpServer
- Using forward declarations for some classes
- InputManager in a namespace RainbruRPG::Core
- Removing XML output for Unitest
- UnitTest fails because we can't confirm mail               FIXED
- CurlAccountConfirmMail send ConfirmId

* v 0.0.5-153
- Doxygen documentation
- tools uses ServerListItem class
- Setting servers number in gsServerrList
- gsServerList uses ServerListItem class
- Create a ServerListItem class to replace tServerListItem
- changeServerAct.php servers.xml link broken                FIXED
- removing CurlProgressFunction
- removing defaultwritefunction.h
- CurlGetFile now use default Curl write function
- Test the whole account creation process                    OK
- Adminsite : directory structure modified
- Removing data/3d/ content
- mailconfirm.php uses mail id for confirmation
- addplayer.php send a confirmation mail (need sendmail)
- Cleaning IttClient/
- TinyXML and EasyBMP licenses are compatible with GPLv3
- Fix the tools-hashsum pb                                   FIXED

* v 0.0.5-152
- Doxygen documentation
- Remove curlget.xml in CurlGetFile destructor
- DEGUB option deactivate the GuiManager::debugWindow
- ./configure DEBUG option should disable debug window
- ./configure DEBUG option disable LOGI and local website
- Quarantine alert misfunction
- A segfault in MultiColumnList    FIXED (please see
   KeyboardNavigation::onListKeyDown() implementation for details)
- TabNavigation PageUp, PageDown implementation
- TabNavigation Home and End implementation
- TabNavigation become KeyboardNavigation
- TabNavigation documentation
- The TabNavigation list enter event name is in a #define
- TabNavigation::addMultiColumnList(std::string) manage the key
   selection
- Remove curlInterface setFilename and getFilename
- xml?????::getXMLTextFromName are several times implemented
- Many xml?????list should become subclasses of CurlFileToXml
- Doxygen documentation

* v 0.0.5-151
- ServerList : key moving manage scrollbar
- ServerList : up and down arrows to select one
- gsServerList tabOrder implementation
- gsServerList buttons implementation
- Feed gsServerList
- gsServerList implementation
- The localtest doesn't found title overlay if we come from the
  netgame menu (it doesn't exist anymore)
- GuiManager::detroyTitleOverlay renamed GuiManager::destroyTitleOverlay
- gsconnect : test if username is empty
- Using Alt+key more than one time doesn't work
- Manage Home and End keys in edit box
- Enter mail address wuth Alt key is a char                 FIXED
- gsCreateAccount submit button
- Including formulas in vcConstant documentation
- gsMenuBase::setupTabOrder(and subclasses) implementation
- tabNavigation::reset()
