
* v 0.0.0-50
- Server come back with RainbruRPG
- No segfault if a menuItem contains no function pointer
- An action in a menu using function pointer
- Draw the black background of the menuItem

* v 0.0.0-49
- Can't go too down or too up in the menus
- If we are in a menu, its name is not highlight
- Draw the selected item in a menu
- Draw the menu background

* v 0.0.0-48
- In the menus, UP and DOWN keys move the cursor
- Using the drawMenu( tShortCut* ); function
- The createMenuBarShortcut update the shortcut list

* v 0.0.0-47
- I now use S-Lang instead of ncurses
- A message bar in TerminalApp

* v 0.0.0-46
- The Windows have a red border xhen they are selected
- Window::create() graphically creates a ncurses Window with a title

* v 0.0.0-45
- A TestWindow class creates a test window
- An enum defines the type of Window
- TerminalApp contains a stack of Window class
- Prints the menu item highlight
- A Window class defines an internal window

* v 0.0.0-44
- Prints the menu's items
- ALT +[shortcut] opens a window below the menu
- All the shortcuts musr be lowercase
- using the libboost to_lower function

* v 0.0.0-43
- Keep the shortcut list with a menu pointer to be able to open it
- Is the terminal able to manage colors and the BOLD attribute
- Menubar in a ncurses WINDOW structure
- Background in blue, foreground in white

* v 0.0.0-42
- Get the menu list from MenuBar
- Print first menus test with mnemonic in red
- Testing the dead key (Alt, Control...) for menu shortcut
  To have the Alt key, I remove 64 from the keycode
	  - lowercase (97 Ã  122)+64
	  - UPPERCASE (65 Ã  154)+64

* v 0.0.0-41
- Skeleton of class for MenuBar, Menu, MenuItem
- The TerminalApp is a MainWindow
- A server API using ncurses (TerminalAPI)

* v 0.0.0-40
- Making a little manual in lisez-moi.html
- Files needed by the GNU GPL

* v 0.0.0-39
- Doxygen dpcumentation for IrrFontManager, Console, Tokenizer 
- A base idea for the Translation tool

* v 0.0.0-38
- ObjectAttribute::getValueText() implemented and used
- get core.fps works
- ObjectAttribute* Console::getAttributeByName( ConsoleObject*, std::string)
  implemented
- 'ConsoleObject getObjectByName(string);' implemented
- Console.QuadCommand et TripleCommand created
- Console::commandGetObjectAttribute(tTokenizerReturn*) implemented
  to treat the 'get.obj.attrb' commands

* v 0.0.0-37
- bool set core.showstats implemented
- wchar_t* Console::prompt becomes un stringw

* v 0.0.0-36
- The console's count command adds the object number of the 
  show [object] command
  Each attribute returns 1(ro) or 2(rw)
- get core.fps is read-only
- FpsAttribute::getValueText() uses StringConv::itoc();
- During a 'show core' command, the FPS are shown

* v 0.0.0-35
- IntAttributeinherits from ObjectAttribute
- Some ObjectAttribute are read-only
  An ObjectAttribute value is ObjectAttribute::getAccesText() (ro or rw)
- Implementation of the Console 'show core' command
  Using StringConv::stow (String to stringw) for the conversion

* v 0.0.0-34
- show core prints in stdout
- ConsoleObject contains a stl vector of ObjectAttribute
- Some font test for the gsGameEsc buttons

* v 0.0.0-33
- The in-game menu Irrlicht-Tab is sized-up to allow it moving in the
  whole screen
- gsGameEsc uses the IrrFontManager-monotype_corsiva font
- new font sizes  : monotype_corsiva 10, 11, 12, 14, 16, 18, 20, 22

* v 0.0.0-32
- A IrrFontManager singleton which manages the Irrlicht font
- A /data/fonts directory was created
- The courrier font is used everywhere but the menus and stats

* v 0.0.0-31
- Change the Console's font with setOverrideFont()
  Impossible for the listbox
- Test of the Irrlicht SDK tool : IrrFontTool.exe  (for Win32 only)
- Set a courrier font in console
- the Console::treatCommandType method as a switch on the command's type
- A command which contains no text even creates a new line in the console

* v 0.0.0-30
- Console : A 'count' command which returns the number of available commands
  Its result is shown in the regression test page
- A StringConv singleton which convert string and others
- Console bool getTokenizerError( tTokenizerReturn* ) implemented

* v 0.0.0-29
- First tests of Tokenizer
- Tokenizer : the different tokens are cmd, obj, attrb, val
- Tokenizer give the number of token
- Tokenizer uses a return structure
- Tokenizer uses a STL std::string

* v 0.0.0-28
- A very simple skeleton of Tokenizer
- Console : ShowStatsAttribute::setValue() is OK
- A base class BoolAttribute

* v 0.0.0-27
- ConsoleObject has a 'description' field
- ObjectAttribute is created with a 'name' and a 'description'

* v 0.0.0-26
- The debugging console have now a 'Core' object (to access the GameEngine...)
- The debugging console have a STL vector of ConsoleObject
  The names of all ConsoleObject can be printed with the 'show' command
- Logger : line nnumber problem fixed
- A simple ConsoleObject with its name
