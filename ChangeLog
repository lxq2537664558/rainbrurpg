2017-03-27  Jérôme Pasquier  <rainbru@free.fr>

	* media/layouts/local_test.layout: add name text edit.

2017-03-20  Jérôme Pasquier  <rainbru@free.fr>

	* ROADMAP: add the new world/server relation question.

2017-03-17  Jérôme Pasquier  <rainbru@free.fr>

	* media/layouts/local_test.layout: add and load the XML layout.
	* src/client/GameEngine.cpp (toLocalTest): correctly switch from
	current state to LocalTest.

2017-03-14  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/LocalTest.cpp: add empty overriden functions.
	* src/client/LocalTest.cpp: add empty class.

2017-03-09  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/LoadingBar.cpp (step): implement function.
	* src/client/LoadingBar_Test.cpp (stepSize): test implemented.
	* src/client/LoadingBar.cpp (stepSize): implement getter.
	* media/layouts/loading_bar.layout: fix the windows placements.

2017-03-09  Jérôme Pasquier  <rainbru@free.fr>

	* media/layouts/loading_bar.layout: add the LoadingBar layout file.

	* src/client/LoadingBar_Test.cpp (vectorSize): add a unit test to
	LoadingBar.

	* src/client/LoadingBar.cpp (LoadingBar): create an empty class.

	* ROADMAP: postpone overlays in highter resolution bug.

2017-02-24  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/ConfirmationDialog.cpp (onCancel): move event handler
	from ModalDialog.cpp
	* src/client/ConfirmationDialog.cpp (onOk): move event handler
	from ModalDialog.cpp

	* src/client/ConfirmationDialog.hpp (ConfirmationDialog); create the
	empty class.

	* src/client/ModalDialog.cpp (exec): uncomment the loop and add a
	FIXME comment.

	* src/client/ModalDialog.cpp (closeDialog): set returnValue and
	stop waiting.
	* src/client/ModalDialog.hpp (returnValue): add the exec() function
	return value as member.

2017-02-20  Jérôme Pasquier  <rainbru@free.fr>

	* media/layouts/modal_dialog.layout: add the cancel button.
	* src/client/ModalDialog.hpp (ModalDialog): add the title parameter
	to constructor.
	* media/layouts/modal_dialog.layout: add the modal dialog layout.

2017-02-06  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/ModalDialog.cpp (exec): directly call GameEngine::
	drawOverlays.
	* src/client/GameEngine.hpp (overlayHandler): now call drawOverlays().
	* src/client/GameEngine.hpp (drawOverlays): new public method to be
	called from ModalDialog.
	* src/client/ModalDialog.cpp (exec): parameter is now a pointer to
	GameEngine.

	* src/client/ModalDialog.cpp (exec): move show() before starting
	the endless loop.

2017-01-31  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/ModalDialog.cpp (exec): calling CEGUI's context function
	clearGeometry(CEGUI::RQ_OVERLAY) to make geometry buffers drawn again.
	* src/client/ModalDialog.cpp (exec): add Ogre::Root parameter to
	eb able to call renderOneFrame().

2017-01-26  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (reconfigure): now using ModalDialog.
	* src/client/ModalDialog.hpp (ModalDialog): first implementation.

2017-01-24  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/LoadingBar.cpp: remove unneeded class.

2017-01-17  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (getNextResolution): uses
	ResolutionHandler to get actual screen size.
	* src/client/GameEngine.cpp (getPreviousResolution): uses
	ResolutionHandler to get actual screen size.
	* src/client/ResolutionHandler.hpp: fix multiple inclusion guard name.

	* src/logger/Logger.cpp: document some members.
	* src/logger/LoggerOutputFile.cpp: update doxygen documentation.

2017-01-14  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/: change headers dates for 2017 for all sources.

2017-01-13  Jérôme Pasquier  <rainbru@free.fr>

	* src/logger/: change headers dates for 2017 for all sources.
	* src/services/: change headers dates for 2017 for all sources.

2017-01-09  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/ResolutionHandler.cpp (probe): now return a temporary
	string from resultToString.

	* src/client/ResolutionHandler.cpp (resultToString): int result to
	string.

	* src/client/ResolutionHandler.cpp (probe): use RainbrurpgException
	to thrown error.

2016-12-28  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/ResolutionHandler.cpp (probeFromInts): remove unneeded
	function.

	* src/client/ResolutionHandler.cpp (probeFromWindow): implement a first
	version.
	* src/client/ResolutionHandler_Test.cpp (fromWindowFailWithNullPointer):
	add a probeFromWindow test for a NULL pointer.
	* src/client/GameEngine.hpp (getRendererWindow): rename to
	getRenderWindow to fix a typo.

	* src/client/ResolutionHandler.cpp (probeFromCfg): remove unneeded
	function.
	* src/client/GameEngine.hpp (getRenderSystem): add new getter.

2016-12-20  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/ResolutionHandler.cpp (probeFromString): implented using
	Boost.regex.

	* DEPENDENCIES: add Boost.Regex dependency.
	* CMakeLists.txt:search for Boost.Regex.

	* src/client/ResolutionHandler_Test.cpp: unit tests for previous class.
	* src/client/ResolutionHandler.cpp (ResolutionHandler): empty probe
	class.
	* src/client/ResolutionHandler.hpp: start new class implementation.

2016-12-18  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/TempMessage.cpp (TempMessage): using DejaVuSans-10-NoScale
	make the messages appear again.
	* src/client/GameEngine.cpp (initialiseCegui): move the try/catch
	of the font exception into TempMessage.cpp.

2016-12-14  Jérôme Pasquier  <rainbru@free.fr>

	* media/cegui-orig/fonts.zip: add media/fonts filesystem.

	* media/cegui-orig/fonts.zip: extract DejaVu-12 fonts.

2016-12-12  Jérôme Pasquier  <rainbru@free.fr>

	* src/logger/LoggerOutputYaml.cpp: update doxygen documentation.

2016-12-07  Jérôme Pasquier  <rainbru@free.fr>
	* src/client/TempMessage.cpp: add a static logger.

	* src/client/GameEngine.cpp (initialiseCegui): found the cause of
	the font exception.
	* src/client/GameEngine.cpp (run): isolation of the CEGUI font
	exception.

	* media/schemes/TaharezLook.scheme: extracted from schemes.zip to be
	modified.
	* media/cegui-orig/Makefile.am: remove unneeded old file.
	* ROADMAP: new section for actual GUI work.

	* src/logger/ObjectAttribute.hpp: update doxygen documentation.
	* src/logger/ObjectAttribute.hpp: add const qualifier to getters.

2016-11-25  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (keyPressed): handle Alt++/Alt+- to change
	resolution.
	* src/client/GameEngine.cpp (getPreviousResolution): get the previous
	available resolution from Ogre.
	* src/client/GameEngine.cpp (getNextResolution): get the next available
	resolution from Ogre.

	* src/client/GameEngine.cpp (reconfigure): mCfgOverride cleaned after
	override.
	* src/client/GameEngine.hpp (toFullscreen): removed.

	* src/client/GameEngine.hpp (mRestartMessage): to-be-printed message
	after reconfigure is now a member.
	* src/client/GameEngine.hpp (mCfgOverride): new ogre configuration
	overriding map.

	* src/client/OgreCfgSaver.cpp: new class used to serialize new
	Ogre configuration after fullscreen switch.
	* src/client/GameEngine.cpp (keyPressed): taking a screenshot now
	print a TempMessage including name of PNG file.

2016-11-24  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (reconfigure): use TempMessage to
	print new Fullscreen option value.
	* src/client/TempMessage.cpp: created to print a temporary message
	after fullscreen switch.

	* src/client/MainMenu.cpp (save/restore): All ByiDialogs should be
	saved/restored.
	* src/client/CeguiDialog.cpp (save/restore): implemented for
	CeguiMember pointer.
	* src/client/CeguiDialog.hpp (mDialog): new member.

	* src/client/MainMenu.cpp (enter): setting the correct windowName
	when calling loadLayout makes the MainMenu window getting saved.
	* src/client/GameState.cpp (loadLayout): add a second string argument
	for CEGUI window name to be returned.

	* src/client/Mainpage.hpp: create the client page.
	* src/Mainpage.hpp: mainpage created.
	* src/logger/Mainpage.hpp: becomes a subpage instead of the mainpage.

2016-11-23  Jérôme Pasquier  <rainbru@free.fr>

	* OLD/: recursively remove directory.

	* src/client/GameEngine.cpp (keyPressed): add F11/screenshot
	keybinding.
	* README.md: add F11 key binding for screenshot.

2016-11-21  Jérôme Pasquier  <rainbru@free.fr>

	* README.md: try to fix client key binding table.

2016-11-20  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/MainMenu.cpp (save): try to save/restore menu position.
	* src/client/MainMenu.hpp (mMenuWindow): add a member for the menu.

	* src/client/MainMenu.cpp (save): restore previous Nyi dialogs state.
	* src/client/MainMenu.cpp (save): fully handle Nyi dialogs visibility
	state.
	* src/client/MainMenu.cpp (enter): fix an event connection (Options
	button was calling onNetworkPlay).

	* src/client/CeguiDialog.cpp (setVisible): new member function.

	* src/client/GameState.cpp (loadLayout): more error check to debug
	reconfigurarion of GameEngine.
	* src/client/GameEngine.cpp (reconfigure): copy last renderer's
	config map to new one.

	* src/client/GameEngine.cpp (reconfigure): fully restarting with correct
	fullscreen status now works.
	* src/client/GameEngine.hpp (initialiseOis): new member function.

2016-11-19  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (shutdownOgre): moved here from destructor.
	* src/client/GameEngine.cpp (initialiseOgre): new protected function
	handles Ogre initialisation.
	* src/client/GameEngine.cpp (reconfigure): start to use StateSaver
	on current game state.

	* src/client/main.cpp (main): beter exception message handling.
	* src/client/GameEngine.cpp (~GameEngine): better cleanup process.
	* src/client/main.cpp (main): handle the restarting game engine.

	* src/client/GameEngine.cpp (restarting): new getter for mRestart.
	* src/client/GameEngine.cpp (keyPressed): set mToFullscreen to
	!mWindow->isFullscreen().
	* src/client/GameEngine.hpp (mToFullscreen): set next fullscreen
	status.

	* src/client/GameEngine.cpp (keyPressed): set mRestart to true
	when Alt+Enter pressed.
	* src/client/GameEngine.hpp (mRestart): add new boolean member;

2016-11-18  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (keyPressed): simple log on the Alt +
	Enter event.

	* src/client/EmptyGameState.hpp: created becaused used in two
	test files.

	* src/client/MainMenu.cpp (save/restore): empty override of pure
	virtual functions.
	* src/client/GameState.hpp (save/restore): add two pure virtual
	functions.

	* src/client/StateSaver.cpp (save): implement save/restore function
	for CEGUI::Window type.


2016-11-17  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/StateSaver_Test.cpp (urect_eq): two more tests on
	URect save/restore.
	* src/client/StateSaver.cpp (save): implement save/restore function
	for CEGUI::Urect type.

	* src/client/StateSaver_Test.cpp (udim_eq): two more tests on
	UDim save/restore.
	* src/client/StateSaver.cpp (save): add save/restore functions to
	easily handle CEGUI::UDim types.
	* src/client/StateSaver.hpp (subkey): helper function for easily
	create subkey names.

2016-11-16  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/Exception_Test.cpp (three_param): some exception
	constructor unit tests.
	* src/client/Exception.cpp (RainbrurpgException): create a base
	eception class.
	* src/client/StateSaver_Test.cpp (cast_error): implement one more
	unit tests.

	* src/client/SateSaver.hpp (StateSaver): setter and getter
	implementationwith std::exception throw.
	* src/client/StateSaver_Test.cpp: some basic unit tests.
	* src/client/SateSaver.cpp (exists): basic implementation.
	* src/client/SateSaver.hpp (StateSaver): new class created.

2016-11-09  Jérôme Pasquier  <rainbru@free.fr>

	* src/logger/Logger.hpp (tOptionMap): fix some undocumented members.

	* CMakeLists.txt: generate Doxyfile from Doxyfile.in
	* .gitignore: add doxygen generated files.
	* Doxyfile.in: template file for doxygen documentation gneration.

	* .travis-ci: remove rvm reference in allow_failures.

2016-11-08  Jérôme Pasquier  <rainbru@free.fr>

	* .travis-ci: add allow_failures for clang.
	* README.md: add travis-ci build image.

2016-11-07  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/MainMenu.cpp (hudUpdate): update text in stats buffer.
	* src/client/GameEngine.cpp (getRendererWindow): new getter.

	* src/client/GameEngine.cpp (overlayHandler): call hudUpdater()
	of current game state every second.
	* src/client/GameState.cpp (hudUpdate): override empty function.
	* src/client/MainMenu.hpp (hudUpdate): new empty member function.

	* src/client/GameState.cpp (drawOverlay): handle mFpsGeometry.
	* src/client/GameEngine.cpp (mFpsGeometry): remove all occurences.

	* src/client/GameState.cpp (drawOverlay): handle mVersionGeometry.
	* src/client/GameEngine.cpp (mVersionGeometry): remove all occurences.

2016-11-05  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (mLogoGeometry): remove all occurences.
	* src/client/GameState.cpp (enter): create mLogoGeometryBuffer here.
	* src/client/GameState.cpp (drawOverlay): override game state function.
	* src/client/MainMenu.hpp (mLogoGeometry): new member definition
	here.
	* src/client/GameEngine.hpp (getOgreRenderer): new getter added.
	* src/client/GameEngine.cpp (overlayHandler): call the
	* src/client/GameEngine.cpp (overlayHandler): call the
	GameState::drawOverlay function for actual game state.
	* src/client/GameState.cpp (drawOverlay): implement an empty virtual
	callback.

2016-11-04  Jérôme Pasquier  <rainbru@free.fr>

	* ROADMAP: create a new 'client work/game state' section.
	* src/client/GameEngine.cpp: remoev NyiDialog header inclusion.
	* src/client/MainMenu.cpp (onOptions): move GameEngine's function
	here.

	* src/client/MainMenu.cpp (onNetworkPlay): use a NyiDialog.

	* src/client/GameEngine.cpp (onLocalTest): move to MainMenu.cpp.

2016-11-02  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameState.cpp (onExit): peacefully shutdown GameEngine.
	* src/client/GameEngine.cpp (onExit): replace with a public
	shutdown() function.

	* src/client/GameState.cpp (addEvent): find a one-liner to
	subscribe to CEGUI event.

	* src/client/GameState.hpp (loadLayout): simpler way to load a CEGUI
	layout file.
	* src/client/GameState.hpp: add mRoot member.

2016-11-01  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/MainMenu.cpp (enter): create the menu.layout.

	* src/client/MainMenu.cpp: create new class.

	* src/client/StateManager.cpp (StateManager): GameEngine pointer comes
	from here.
	* src/client/GameState.hpp (exit): now takes a GameEngine pointer
	parameter.
	* src/client/GameState.hpp (enter): now takes a GameEngine pointer
	parameter.
	* src/client/StateManager_Test.cpp: implement some unit tests.

2016-10-31  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameState_Test.cpp: useless GameState unit tests.
	* src/client/StateManager.cpp: new StateManager class.
	* src/client/GameState.cpp: new GameState class.

	* src/services/Services.hpp (main): fix the unit tests issue

	* src/client/GameEngine.cpp (overlayHandler): implement a one second
	update for stats overlay.
	* src/client/GameEngine.hpp (GameEngine): add a FPS geometry buffer.

2016-10-30  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (onOptions): fix the wrong NULL test issue.

	* src/client/NyiDialog.cpp (NyiDialog): handle the uniqueName parameter
	and a new parent window to allow multiple dialogs in the same context
	* src/client/NyiDialog.cpp (NyiDialog): add the uniqueName member.

	* src/client/GameEngine.cpp (onLocalTest): add a second NyiDialog
	instance for a test.

2016-10-29  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (onNetworkPlay): now uses the new
	NyiDialog class.
	* src/client/NyiDialog.cpp (NyiDialog): implements the featureName
	text.
	* src/client/NyiDialog.hpp (NyiDialog): uses CeguiDialog as a base
	class.

	* src/client/CeguiDialog.cpp (CeguiDialog): correctly destroy
	the underlying cegui window.

	* src/client/CeguiDialog.cpp (onOk): hide the dialog on event.
	* media/layouts/nyi_dialog.layout: remove background.
	* src/client/GameEngine.cpp (onNetworkPlay): create a CeguiDoalog
	instance and show it.
	* src/client/GameEngine.cpp (onExit): cegui event callback returns
	true value.
	* src/client/GameEngine.cpp (Exit_OnClick): rename to onExit().

2016-10-28  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/CeguiDialog.hpp (CeguiDialog): implement basic visibility
	thing, including show(), hide() and isVisible().

	* CMakeLists.txt (client-src): add CeguiDialog.cpp to client sources.
	* src/client/CeguiDialog.cpp (CeguiDialog): basic constructor
	implementation.
	* src/client/CeguiDialog.hpp (CeguiDialog): add basic class and members.

2016-10-27  Jérôme Pasquier  <rainbru@free.fr>

	* media/layouts/nyi_dialog.layout: create a basic Not Yet Implemented
	layout file.

2016-10-26  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (windowResized): update OIS mouse metrics.
	* src/client/GameEngine.hpp (GameEngine): add windowResized declaration.

	* src/client/GameEngine.cpp (~GameEngine): now delete root.
	* src/client/GameEngine.cpp (~GameEngine): remove itself ad a
	windowEventListener.
	* src/client/GameEngine.cpp (frameRenderingQueued): check for shutdown
	or losed window before capturing OIS devices.

2016-10-25  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (run): implement the version-revision
	geometry buffer (CEGUI overlay).
	* src/client/GameEngine.hpp (GameEngine): add mVersionGeometry member
	pointer.
	* config.h.in: add VERSTRING macro.

	* media/layouts/logo.scheme: remove unneeded file.
	* media/imagesets/logo.imageset: remove unneeded file.

2016-10-23  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (overlayHandler): implement and draw
	a CEGUI overlay for the logo.
	* src/client/GameEngine.cpp (~GameEngine): implement destructor.
	* media/logo.png: moved and renamed to media/imagesets/rpglogo.png.
	* src/client/resources.cfg.in (imagesets): add ../media/imagesets.
	* media/layouts/logo.imageset: now specify version 2 in imageset.

2016-10-22  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (run): try to add the previous layout but
	something's wrong.
	* media/layouts/logo.*: add an imageset, a layout and a scheme file.
	* media/logo.png: add a logo.

2016-10-21  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/main.cpp (main): use running() to exit before calling
	run().
	* src/client/GameEngine.cpp (running): implement getter function.
	* src/client/GameEngine.hpp (running): add running() declaration.

2016-10-20  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (Exit_OnClick): make the main menu's exit
	button exit the game.
	* src/client/GameEngine.hpp (GameEngine): add Exit_OnClick declaration.

2016-10-19  Jérôme Pasquier  <rainbru@free.fr>

	* CI/before_install.sh: another /usr/local/lib test using tee.

	* CI/before_install.sh: add basic manual installation of CEGUI 0.8.

2016-10-18  Jérôme Pasquier  <rainbru@free.fr>

	* media/layouts/menu.layout: change Y positions to buttons to make
	the buttons appear in new window type.
	* media/layouts/menu.layout (GameMenu): change type to
	TaharezLook/FrameWindow to make the resize cursors appear.

	* src/client/GameEngine.cpp (GameEngine): hide OIS mouse cursor.

2016-10-14  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (run): Initialize mouse position to 0,0.
	* src/client/GameEngine.cpp (run): Taharez mouse cursor is back.
	* DEPENDENCIES (CEGUI): change from 0.7 to 0.8.

	* src/client/GameEngine.cpp: many changes due to new CEGUI version.
	* src/client/GameEngine.cpp: CEGUI's inject* called from mContext.
	* src/client/GameEngine.hpp (mContext): add CEGUI context as pointer.

2016-10-07  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (initializeCegui): becomes a new function
	to be able to move this code.

2016-10-06  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine.cpp (GameEngine): move lb->finish() and
	add some logger message.
	* src/client/GameEngine.hpp (GameEngine): mSceneMgr becomes a member.

2016-10-05  Jérôme Pasquier  <rainbru@free.fr>

	* ROADMAP: close the git switch item.

	* INSTALL.md: updated with 'Installation Instructions'.
	* INSTALL: renamed to INSTALL.md.
	* ROADMAP: postponed unit test scm/test.scm issue.

2016-10-04  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine_Test.cpp (my_test): switch to GTest.
	* CI/before_install.sh: install GTest.

2016-09-02  Jérôme Pasquier  <rainbru@free.fr>

	* CI/script.sh: remove libc++ reference since we use clang 3.8.

	* CMakeLists.txt (include_directories): add Boost include dir.
	* CMakeLists.txt (rainbrurpg-logger): add ${Boost_LIBRARIES} to fix
	CI issues.

	* ROADMAP: close the landing page section.

2016-09-01  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt (rainbrurpg-services): remove two sources that
	contain additional main() function.
	* CMakeLists.txt (rainbrurpg-services): becomes a shared library.

	* CI/before_install.sh (libogre-dev): fix name issue to libogre-1.8-dev.

	* .travis.yml (dist): switch to trusty to have clang 3.8.
	* CI/before_install.sh (clang): try conditionnal installation of
	clang 3.8.

	* CI/script.sh (clang++): try using libc++ to fix max_align_t issue.

	* CI/before_install.sh (apt-get): add --force-yes due to GPG errors.

	* CI/before_install.sh: trying clang 3.8 instead of 3.9.

	* CI/before_install.sh: add '-y' to ppa line.

	* CMakeLists.txt: re-enable C++11 to test it with cmang 3.9.
	* CI/before_install.sh: trying to install clang 3.9.

	* CMakeLists.txt: disable C++11 support for clang compiler to
	avoid CI fails.

2016-08-31  Jérôme Pasquier  <rainbru@free.fr>

	* src/client/GameEngine_Test.cpp (my_test): fake unit test.
	* CI/script.sh: add `make check` to travis-ci.
	* CMakeLists.txt (BUILD_UNITTESTS): search for Boost.Test only if
	needed.
	* CMakeLists.txt (BUILD_UNITTESTS): add the unit tests option.

	* ROADMAP: add Unit tests section.

2016-08-18  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt: replace GLOB with hardcoded filenames for all other
	targets.

	* CMakeLists.txt (logger-src): replace GLOB with hardcoded filenames.
	* src/server/tools/server_ctl/CommandLine.cpp (getNext): remove
	trim to fix CI fail.

	* DEPENDENCIES (Enet): add full section from CI/before_install.sh.
	* DEPENDENCIES (readline): add homepage and download sections.
	* src/server/tools/server_ctl/CommandLine.cpp: remove iostream include
	trying to fix the ci build.
	* DEPENDENCIES (Boost): add homepage and download sections.
	* DEPENDENCIES (Guile): add full section from CI/before_install.sh.
	* DEPENDENCIES (Boost): add some needed components (System, FileSystem,
	Graph, Test).

2016-08-04  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt: make CMAKE_CXX_FLAGS also remove src/ from the
	filename.
	* server/ : move remaining files to OLD/service.
	* server/ : remove autotools files.

	* CMakeLists.txt: now search for Readline.
	* CMakeLists.txt: add setting for CMAKE_MODULE_PATH.
	* cmake/FindReadline.cmake: add a cmake script used to search for
	readlien library.
	* src/server/tools/server_ctl/CommandLine.cpp (prompt); replace
	PACKAGE_VERSION macro with VERSION because of the cmake-based
	config.h.
	* src/server/tools/server_ctl/CommandLine.cpp: remove conditionnal
	include of config.h.
	* CMakeLists.txt (rainbrurpg-server-ctl): added rule for new executable.

2016-07-29  Jérôme Pasquier  <rainbru@free.fr>

	* client/ : move remaining files to OLD/service.
	* client/ : remove autotools files.
	* CMakeLists.txt (rainbrurpg-services): changed path to build
	client and .cfg files.
	* src/client: moved client/src files .?pp and .cfg.in here.

2016-06-11  Jérôme Pasquier  <rainbru@free.fr>

	* src/logger/Logger.cpp (parse_program_options): returns false by
	default to fix a clang warning.
	* src/logger/LoggerOutput.hpp (~LoggerOutput): add an empty virtual
	destructor to fix some clang warnings.

	* services/: move remaining files to OLD/services.
	* services/: remove autotools files.

	* CMakeLists.txt (rainbrurpg-services): changed sources path.
	* services/src/: *hpp and *.cpp moved to src/services/.

2016-06-06  Jérôme Pasquier  <rainbru@free.fr>

	* meta/ completely moved to OLD/.
	* CMakeLists.txt (GETTEXT_CREATE_TRANSLATIONS): fix a broken
	target dur to the lack of logger/po/rainbrurpg-logger.pot.
	* DEPENDENCIES: merge it with the logger/DEPENDENCIES content.

	* logger/: move many files to OLD.
	* logger/ROADMAP: move many remaining items to top-level ROADMAP.

2016-06-04  Jérôme Pasquier  <rainbru@free.fr>

	* DEPENDENCIES: client file becomes top-level one.

2016-05-02  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt (pot_file): add xgettext parameter to append
	TRANSLATORS comments.
	* CMakeLists.txt (pot_file): now uses po/POTFILES.in as file list.
	* po/POTFILES.in: add a list of translatable files.

2016-04-27  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt (pot_file): start to handle translation with cmake.
	* CMakeLists.txt (XGETTEXT_CMD): search for the xgettext executable.

2016-03-13  Jérôme Pasquier  <rainbru@free.fr>

	* logger/src/ : start to remove unneeded autotools files.

2016-02-19  Jérôme Pasquier  <rainbru@free.fr>

	* */README: removed from git control.
	* FT.sh: add top-level ROADMAP to cat.

2016-01-24  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt (CMAKE_CXX_FLAGS): defines the __FILENAME__ variable
	to fix the full path.
	* src/logger/Logger.hpp (LOG): now uses __FILENAME__ to fix full path
	in output.

2016-01-16  Jérôme Pasquier  <rainbru@free.fr>

	* client/media/: moved to media/ (top level).
	* client/src/resources.cfg:  renamed resources.cfg.in.

	* CMakeLists.txt (CONFIGURE_FILE): cmake now generates plugins.cfg.

2016-01-05  Jérôme Pasquier  <rainbru@free.fr>

	* src/logger/ : change headers date for 2016.

	* server/ : change headers date for 2016.
	* services/ : change headers date for 2016.

	* network/src/benchmark/ : change headers date for 2016.
	* meta/src/*.pm: change footers date for 2016.

2016-01-04  Jérôme Pasquier  <rainbru@free.fr>

	* client/src/: change headers date for 2016.

2015-10-28  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt: uses FindGettext.
	* README.md: added cmake based install instructions.
	* INSTALL: basic cmake based steps.

2015-09-08  Jérôme Pasquier  <rainbru@free.fr>

	* logger/AUTHORS: move to top-level and remove all other copies.
	* logger/COPYING: move to top-level and remove other copies (client,
	meta, network, server,services).

2015-09-05  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt (BUILD_LOGREADER): add an error message and fatal
	error if we can't find rbuic4.

	* CMakeLists.txt (BUILD_LOGREADER): correctly generate MainWindow_ui
	ruby sources from .ui file.

2015-09-05  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt: trying to use rbuic using a custom_target.

2015-08-24  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt: conditionnal logger examples compilation works.

2015-08-02  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt: correctly build services and server with cmake.

2015-07-29  Jérôme Pasquier  <rainbru@free.fr>

	* CMakeLists.txt (find_package): search for Boost packages.
	* CMakeLists.txt (include_directories): adds CMAKE_SOURCE_DIR to
	make the client find config.h

