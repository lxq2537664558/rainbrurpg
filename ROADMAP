					-*-org-*-

* v1.0.0
** v0.1.0
*** v0.0.6
**** Using foswiki as an Extension Repository
- [ ] Id of the extension is its foswiki WikiName
- [ ] The Core* wikinames are reserved
- [ ] More dependencies
  - [ ] Must add Boost.Spirit and Boost.Graph to DEPENDENCIES file
  - [ ] cmake should test for these enw dependencies
  - [ ] Boost.Property_tree to read .ini files
- [ ] Use graphviz to generate a dependencies graph for a given extension
  The graph could use an ImageMap to become clickable
- [ ] Could use a 5 starts rating using stars from default foswiki and
  use Google metadata
**** More client work
- [ ] Try to use the 'FetteUNZFraktur' font from the CEGUI demo
- [ ] Start with the localTest menu
- [ ] Must remove the OLD sources but keep the ROADMAP file for GT stat
  Mainly to make coverity scan padd (> 80%?)
- [ ] May add a sharebar in mainmenu with Twitter,Facebook,G+ (using
  font-awesome)
**** Postponed unit tests thing
***** Fix the actual CI issues
- [X] The same error occurs in two builds now
  =guile: uncaught throw to system-error: (open-file ~A: ~S (No such file or directory scm/test.scm) (2))=
  - [X] Maybe try for GTest
    Because we have localc segfault
    The segfault isn't here anymore but now the guile error is local
Error is fixed, was due to a src/services/Services.hpp old code    
- [ ] Can't find clang++ when building rainbrurpg but cegui is correctly built
  The build works fine with clang++ if we can correctly configure it
  Allow failure now works fine but still
  ==Could not find compiler set in environment variable CXX:=
***** Improve CI with other OSes
      CLOCK: [2016-06-11 sam. 02:39]--[2016-06-11 sam. 02:45] =>  0:06
- [ ] Start with osx but allow_failure
**** Handling i18n 
- [ ] We must handle a call to msgmerge in CMakeLists.txt
- [ ] Must handle `make install` command

**** Server work
- [ ] Server must print its public IP adress
  see https://www.ipify.org/
  Read IP from the api.ipify.org URL
  Must be integreted to network (at least used by server and meta)
  - Also note that this is the same work as downloading the meta's entry point
    we should share this code. Maybe meta could use network library.
**** Logger work
***** For logger v2
****** Add platform dependant header data
****** Add platform dependant log data
- [ ] Logger may log process time
***** May also handle Environment variables, config file...
      To know what level to output, configure Tty logger etc...
***** handle end-user program options
- [ ] program arguments chaining
  - [ ] Tests using command_options list of struct
    - Printing work, now we should notify external variable map
    - Rpg::Logger::parse_program_options must handle the list of struct
      *Doesn't work*

  Other libraries can add their own arguments
  - [ ] The -h,--help for all program
  - [ ] The list must be sorted for help output
  - [ ] We must avoid duplicates, at least for short form
    if we have multiple -h, --help and --logger-help must stay here but
    only one -h can stay

***** Present v1 YAML output (maybe in doc/texinfo/yaml-v1.tex)
***** About the log-reader application
- [ ] UI controls handling
  - [ ] Create signals, slots for the three combos
    - [ ] The loglevel combo
      - [ ] Change other combos content ?
- [ ] Test how cmake handle .ui files if rbuic isn't found
- [ ] Maybe use kwalify to test YAML file
      see http://www.kuwata-lab.com/kwalify/ruby/users-guide.01.html for validation
- [ ] YAML output versionning
      Explain it in texinfo manual
  - [ ] v1: platform independant infos
  - [ ] v2: Add some platform dependant infos
	Process time, OS name, datetime of execution, compilation flags
  - [ ] v3: sigsegv trap handling
- [ ] Should find or create a suitable property editor widget
      I can't find a suitable widget, neither in /designer/, neither
      in the API, but we can test the following URL
      http://qt-apps.org/content/show.php/QPropertyEditor?content=68684
      How to make a ruby binging for this ?
- [ ] see the log_reader.rb bug about the ErrorTrap#show_dialog cancel
      button
**** Meta library
     CLOCK: [2016-06-06 lun. 06:01]--[2016-06-06 lun. 06:09] =>  0:08
     This new meta library is used both by server/client to find
     server to play on. It's based on websocket, to be able to
     use it in a browser (for a further webgl implementation ?)

     See the 'Server work' for the entry-point downloading thing. Shared
     with public-IP.

     *This part will use the new libwsmeta repository*

- [ ] Current one should go to OLD/ because based on foswiki
- [ ] cmake should search for a good C++ websocket library
  and add this library to top-level DEPENDENCIES file
- [ ] Implement the base class (server's IP + port,Name, description,
      max player... ping, # player)
- [ ] The server add itself with mininmum values, the ones that depend on time
  or network (ping, player number) will be added by client when trying to 
  directly contact the server
  - [ ] Implement unit test, at least to be sure a server can't add itself twice
**** Postponed bugs
- [-] Trying to go back to localTest seems to exit the game
  Going to LocalTest, then go back to MainMenu and again to LocalTest
  actually switch to LocalTest (as a proff, we connect signals from
  LocalTest::enter(), then we properly leave the game
  - [X] This seems to be fixed (was due to bool frameStarted not returning true)
  - [ ] Close the github issue
- [ ] The same way, when we come back, the LocalTest window is missing

- [-] See the AnimatedImage class
  *May be the subject of a blog post*
  - From the media/imagesets/waiting.png
  - [X] Then change the image every x ms
  - [ ] First draw a static image
    Don't know why but the image isn't drawn. The titlebar of the
    LocalTest window is hidden.
    - [ ] Must try to base this on StaticImage
      With StaticImage it works (implementation says nothing)
  - [ ] Try to get image list and number of image from an imageset's name

**** Start to handle the Profile GameState
     I would like to try to handle SSH key to handle authentication.
     It can be usefull if we use a git-base filesystem.
- [ ] Find a lib to handle (generate etc...) SSH asymetric keys
  The library must be able to generate keys. According to this link 
  (http://stackoverflow.com/a/4985328) it seems https://www.libssh.org/ has
  a C++ wrapper in a header called libsshpp.h.
  It seems we can generaet a key pair : http://api.libssh.org/master/group__libssh__pki.html#gae038fa1b34f9427c7ba84082a1a20bad
  - a warning states that generating a ssh key could be long
    - test it to see how long
    - see if we can have a progress bar callback for this
- [ ] Create a multi-profile layout that lets the user create/modify and delete
  profiles, eventually with a password on private key
- [ ] Create a new geometry buffer that prints the current profile name
  and a way to tell the user to create a profile before using the 
  server/local test
**** Some overlays disappear in 1280x1024 resolution
- List all overlays affected by this bug :  tempMessage, stats and version
  - Logo is not affected
- Does this bug persist in fullscreen mode ? NO
- [X] Try to see if tempMessage position is correct
  Even if height - 120, tmpMsg isn't drawn
- [X] Check if the draw() function is actually caled : YES
- [X] Is the clippingregion correct ?
  isClippingActive() returns true
- [ ] What is different between the logo geometry/others
  - tmpMsg is drawn from GameEngine::drawOverlays()
  - logo, version and stats are drawn in MainMenu::drawOverlay()
**** TODO Try to fix current travis-ci build
     CLOCK: [2017-04-11 mar. 20:20]--[2017-04-11 mar. 20:41] =>  0:21
- [ ] Cloning submodule fails
  It seems due to SSH. Change URL to https in .gitlmodules
  from https://docs.travis-ci.com/user/common-build-problems/#Git-Submodules-are-not-updated-correctly
  - [ ] Always failing. Trying to add a depth parameter
  - [ ] Maybe we need to add rlgl to travis ?
**** TODO Create AnimatedImage class and continue LocalTest
     CLOCK: [2017-04-13 jeu. 21:29]--[2017-04-13 jeu. 22:19] =>  0:50
     CLOCK: [2017-04-12 mer. 20:21]--[2017-04-12 mer. 21:13] =>  0:52
     CLOCK: [2017-04-11 mar. 19:17]--[2017-04-11 mar. 19:48] =>  0:31
     CLOCK: [2017-04-10 lun. 20:10]--[2017-04-10 lun. 20:33] =>  0:23
     CLOCK: [2017-04-10 lun. 19:11]--[2017-04-10 lun. 19:30] =>  0:19
     CLOCK: [2017-04-09 dim. 21:04]--[2017-04-09 dim. 22:02] =>  0:58
     CLOCK: [2017-04-09 dim. 20:47]--[2017-04-09 dim. 21:02] =>  0:15
     CLOCK: [2017-04-09 dim. 19:31]--[2017-04-09 dim. 20:33] =>  1:02
     CLOCK: [2017-04-09 dim. 18:54]--[2017-04-09 dim. 19:26] =>  0:32
     CLOCK: [2017-04-09 dim. 17:39]--[2017-04-09 dim. 18:06] =>  0:27
     CLOCK: [2017-04-08 sam. 20:35]--[2017-04-08 sam. 22:14] =>  1:39
     CLOCK: [2017-04-07 ven. 19:17]--[2017-04-07 ven. 19:48] =>  0:31
- [ ] Call`git pull` in ext/librlgl to update it.

- [X] Trying another WaitingCircle implementation
  - [X] Create it from AnimatedImage for the image loading thing
  - [X] Draw it in a simple GeometryBuffer like for RpgLogo image
  - [X] Place it in bottom-right corner
    With an optional message "Parsing local worlds"
  - [X] with a update(float elapsed) function
    that handle image changing etc...
    - [X] We need this function in GameState base class
    - [X] Then call it from GameEngine::frameStarted
    - [X] Then override it in LocalTest
  - [X] Should have show()/hide() functions
  - [X] Handle the message drawing
    
- [-] Finish the LocalTest implementation (waiting for RLGL)
  - [X] LocalTest window must reappear when we come for the second time
  - [X] Keybinding for fullscreen res. change don't work in LocalTest
  - [X] Changing resolution in LocalTest causes an error :
    =Catched exception : Can't find key 'mainmenu:visible'=
    StateManager must remember the latest loaded GameState
    Currently in GameEngine::reconfigure, 
  - [-] Implement LocalTest overriden functions
    make Save/Restore state functions
    - [X] Must implent StateSaver helper for WaitingCircle
      visibility state only
    - [-] Save the actual seed content
      - [X] Implement getter and setter
      - [ ] Use them in save/restore
    - [ ] Save the actual name content
      - [ ] Implement getter and setter
      - [ ] Use them in save/restore
  - [ ] Must implent StateSaver helper for CEGUI::TabControl
     Selected tab
    - [ ] Must implent StateSaver helper for CEGUI::ListBox
      List items. Maybe a standard helper for StringLists
  - [ ] Use RlglSystem::getLocalWorlds() and add them to existing worlds listbox
    Use the listener and the WaintingCircle class
    - [ ] Try to use it. LocalTest should override LocalWorldsListener.hpp
    - [ ] We have undefined references to RLGL::LocalWorldsListener's ctor
  - [ ] Call server::load(worldconfig) or server::generate(config)
- [ ] See why, when we reconfigure ogre, after a res. change or ullscreen,
  we restore gamestate only after we close the confirmation dialog
  - Maybe we restore the gamestate after we save the new config. We must
    restore the gamestate /before/ we show the confirmation dialog
- [ ] Must be able to use keyboard arrows (up, down) on local worlds listbox
- [ ] Launch an embedded server
- [ ] See if we can generate a first landscape
**** TODO Some wiki work
     See 'My Current Tasks' in my page
- [ ] http://www.rainbrurpg.org/Main/WebHome#How_to_get_RainbruRPG
  is about sourceforge project and FRS : change it to github
- [ ] Is the SwitchtoMercurial page finished ?
  Maybe create a SwitchToGit page ?
- [ ] Modify Foswiki's ROADMAP links to github
- [ ] Make social news about changes
**** TODO Handle coverity scan 
     see https://scan.coverity.com/download for more (currently at 4%)
- [ ] rev 253 uploaded to coverity scan 23 Nov     
**** TODO Handle doxygen documentation
     CLOCK: [2017-01-17 mar. 10:37]--[2017-01-17 mar. 11:04] =>  0:27
     CLOCK: [2016-12-12 lun. 02:12]--[2016-12-12 lun. 02:46] =>  0:34
     CLOCK: [2016-12-07 mer. 03:31]--[2016-12-07 mer. 03:44] =>  0:13
     CLOCK: [2016-11-24 jeu. 02:27]--[2016-11-24 jeu. 03:06] =>  0:39
     CLOCK: [2016-11-22 mar. 23:48]--[2016-11-23 mer. 00:03] =>  0:15
     CLOCK: [2016-11-09 mer. 18:59]--[2016-11-09 mer. 19:17] =>  0:18
- [X] Handle Doxyfile version number from a cmake config file
- [X] The main page is the logger's one, fix that
  Maybe with submodules. In fact handled by a page.
- [X] Could be a good thing to add a Mainpage.hpp for each lib/bin subdir
  Because using a \subpage command in mainpage makes it appears as a subpage
- [X] Create a real Homepage in src/Mainpage.hmm
- [ ] May document undocumented members (see doxygen.log)
**** DONE Start to handle Local test
     CLOCK: [2017-04-06 jeu. 20:36]--[2017-04-06 jeu. 21:23] =>  0:47
     CLOCK: [2017-04-06 jeu. 19:48]--[2017-04-06 jeu. 20:35] =>  0:47
     CLOCK: [2017-04-05 mer. 21:30]--[2017-04-05 mer. 22:10] =>  0:40
     CLOCK: [2017-04-05 mer. 18:50]--[2017-04-05 mer. 19:40] =>  0:50
     CLOCK: [2017-04-04 mar. 21:00]--[2017-04-04 mar. 21:56] =>  0:56
     CLOCK: [2017-04-04 mar. 19:22]--[2017-04-04 mar. 20:30] =>  1:08
     CLOCK: [2017-04-03 lun. 21:06]--[2017-04-03 lun. 22:52] =>  1:46
     CLOCK: [2017-04-03 lun. 20:29]--[2017-04-03 lun. 21:01] =>  0:32
     CLOCK: [2017-04-03 lun. 19:54]--[2017-04-03 lun. 20:28] =>  0:34
     CLOCK: [2017-04-03 lun. 00:54]--[2017-04-03 lun. 01:23] =>  0:29
     CLOCK: [2017-04-02 dim. 23:59]--[2017-04-03 lun. 00:47] =>  0:48
     CLOCK: [2017-04-01 sam. 23:23]--[2017-04-02 dim. 00:06] =>  0:43
     CLOCK: [2017-03-31 ven. 22:20]--[2017-03-31 ven. 23:44] =>  1:24
     CLOCK: [2017-03-30 jeu. 00:17]--[2017-03-30 jeu. 00:38] =>  0:21
     CLOCK: [2017-03-29 mer. 23:48]--[2017-03-30 jeu. 00:03] =>  0:15
     CLOCK: [2017-03-29 mer. 22:15]--[2017-03-29 mer. 22:43] =>  0:28
     CLOCK: [2017-03-29 mer. 19:35]--[2017-03-29 mer. 20:43] =>  1:08
     CLOCK: [2017-03-27 lun. 22:47]--[2017-03-27 lun. 23:21] =>  0:34
     CLOCK: [2017-03-27 lun. 22:00]--[2017-03-27 lun. 22:11] =>  0:11
     CLOCK: [2017-03-27 lun. 21:26]--[2017-03-27 lun. 21:58] =>  0:32
     CLOCK: [2017-03-17 ven. 19:19]--[2017-03-17 ven. 19:54] =>  0:35
     CLOCK: [2017-03-17 ven. 17:00]--[2017-03-17 ven. 17:47] =>  0:47
     CLOCK: [2017-03-17 ven. 15:24]--[2017-03-17 ven. 16:09] =>  0:45
     CLOCK: [2017-03-10 ven. 16:11]--[2017-03-10 ven. 16:45] =>  0:34
     CLOCK: [2017-03-10 ven. 14:08]--[2017-03-10 ven. 14:47] =>  0:39
     CLOCK: [2017-03-10 ven. 13:20]--[2017-03-10 ven. 13:34] =>  0:14
     CLOCK: [2017-03-09 jeu. 18:24]--[2017-03-09 jeu. 18:50] =>  0:26
     CLOCK: [2017-03-09 jeu. 18:05]--[2017-03-09 jeu. 18:22] =>  0:17
     CLOCK: [2017-03-09 jeu. 16:44]--[2017-03-09 jeu. 17:07] =>  0:23
     CLOCK: [2017-03-09 jeu. 15:43]--[2017-03-09 jeu. 16:20] =>  0:37
     While waiting for the meta library
- [X] Create a new LoadingBar based on a CEGUI layout
  Maybe based on http://static.cegui.org.uk/docs/0.7.9/classCEGUI_1_1ProgressBar.html
  - [X] Create the base class, as a CEGUI dialog
    Must have a title and a step text
  - [X] Instanciate and show it when MainMenu's LocalTest button is clicked
  - [X] May create unit tests
  - [X] Must create the layout file 
  - [X] Show the layout file in LoadingBar::init()
  - [X] Fix the layout file
  - [X] get the progressbar and title text pointer
    then set them to the actual values
  - [X] Implement the step function  
- [X] Must validate the LocalTest layout and enable Play button
  In the key pressed GameState event
  - [X] Call the check() function when needed
  - [X] Get the currently selected tab
  - [X] If new world, test if the name and seed aren't empty
  - [X] If in existing world tab, search for a selected one
  - [X] We call check() when changing tab, now handle list change
  - [X] Must add some dummy worlds via a addWorld(string) function
  - [X] Must add an event on th world list
- [X] Create a real LocalTest GameState
  - [X] Work on the MainMenu LocalTest transition
    - [X] destroy MainMenu
    - [X] instanciate LocalTest
    - [X] set current gamestate to LocalTest
  - [X] Create and load the CEGUI layout file
    - [X] implement GameState::unloadLayout()
    - [X] Must add world's Name and associated textedit  
    - [X] Should add a list widget for the "existing world" pane  
    - [X] Must choose to generate a new world or select an existing one
      Try to use a TabControl with /NewWorld/ and /ExistingWorld/ tabs
      http://cegui.org.uk/wiki/Sample_code_for_all_Widgets#TabControl
    - [X] Layout must have a New World configuration window
      - [X] World generation with Seed textedit and random button 
	Must add the random button to seed
    - [X] Should inject passed time to CEGUI	
    - [X] Should send keyboard input to CEGUI
      This bug occurs in all game states
      - [X] Char is correctly sent
      - [X] Should send these events to gamestate
	 return true if event is used
    - [X] Implement the Back button
      - [X] There is a  =Texture already exists: rpgLogo= when creating MainMenu
      - [X] There's an event issue when trying to go back to MainMenu
        ='root/GameMenu/Exit' is not attached to Element at 'Root'=
	- Now calling GameState::destroyRootWindow()
	We have a segfault in MainMenu::drawOverlay()
	in CEGUI::RenderingSurface::draw()
    - [X] Random seed may come from a RLGL function
      Because the seed could come from another function than simply rand()
    - [X] For the existing world tab, we must have a RGL function
      that returns existing local worlds
      - [X] We need to free librlgl first
      - [X] Then add rlgl as a git submodule in ext/
      - [X] Add liblrgl CMakefile to top-level one
	We have an issue with ‘ROOTDIR’
      - [X] Use the Seed and randomize thing to get a random seed in LocalTest
	To see if the librlgl include works
      - [X] Explain in README.md how to use submodule
    - [X] Should we rely on a server's class to generate the new world ?
      - [X] should be compiled as a shared lib used by both server & client	
**** DONE Options gamestate
     CLOCK: [2017-03-09 jeu. 13:32]--[2017-03-09 jeu. 14:26] =>  0:54
     CLOCK: [2017-02-24 ven. 14:02]--[2017-02-24 ven. 14:34] =>  0:32
     CLOCK: [2017-02-24 ven. 13:07]--[2017-02-24 ven. 13:39] =>  0:32
     CLOCK: [2017-02-24 ven. 12:34]--[2017-02-24 ven. 12:42] =>  0:08
     CLOCK: [2017-02-24 ven. 11:47]--[2017-02-24 ven. 12:31] =>  0:44
     CLOCK: [2017-02-20 lun. 12:04]--[2017-02-20 lun. 12:52] =>  0:48
     CLOCK: [2017-02-20 lun. 10:30]--[2017-02-20 lun. 11:15] =>  0:45
     CLOCK: [2017-02-20 lun. 09:06]--[2017-02-20 lun. 10:24] =>  1:18
     CLOCK: [2017-02-06 lun. 09:48]--[2017-02-06 lun. 10:47] =>  0:59
     CLOCK: [2017-01-31 mar. 22:48]--[2017-01-31 mar. 23:48] =>  1:00
     CLOCK: [2017-01-26 jeu. 19:39]--[2017-01-26 jeu. 20:25] =>  0:46
     CLOCK: [2017-01-24 mar. 19:03]--[2017-01-24 mar. 19:08] =>  0:05
     CLOCK: [2017-01-17 mar. 12:17]--[2017-01-17 mar. 12:46] =>  0:29
     CLOCK: [2017-01-09 lun. 14:59]--[2017-01-09 lun. 15:23] =>  0:24
     CLOCK: [2017-01-09 lun. 14:22]--[2017-01-09 lun. 14:57] =>  0:35
     CLOCK: [2017-01-09 lun. 13:54]--[2017-01-09 lun. 14:18] =>  0:24
     CLOCK: [2016-12-28 mer. 08:50]--[2016-12-28 mer. 08:55] =>  0:05
     CLOCK: [2016-12-28 mer. 07:56]--[2016-12-28 mer. 08:46] =>  0:50
     CLOCK: [2016-12-28 mer. 07:13]--[2016-12-28 mer. 07:54] =>  0:41
     CLOCK: [2016-12-21 mer. 06:13]--[2016-12-21 mer. 07:12] =>  0:59
     CLOCK: [2016-12-20 mar. 04:22]--[2016-12-20 mar. 05:38] =>  1:16
     CLOCK: [2016-12-18 dim. 09:08]--[2016-12-18 dim. 09:24] =>  0:16
     CLOCK: [2016-12-18 dim. 09:05]--[2016-12-18 dim. 09:07] =>  0:02
     CLOCK: [2016-12-18 dim. 08:20]--[2016-12-18 dim. 08:35] =>  0:15
     CLOCK: [2016-12-18 dim. 07:47]--[2016-12-18 dim. 08:01] =>  0:14
     CLOCK: [2016-12-14 mer. 01:54]--[2016-12-14 mer. 02:46] =>  0:52
     CLOCK: [2016-12-07 mer. 12:44]--[2016-12-07 mer. 13:52] =>  1:08
     CLOCK: [2016-12-07 mer. 04:06]--[2016-12-07 mer. 04:39] =>  0:33
- [X] Changing resolution
  We sometimes have a segfault when changing resolution.
  - [X] Add a ResolutionHandler class we can unit test
    - [X] Get the actual resolution using a probe(GameEngine*) function
      If this function can't have actual resolution from Ogre cfg file.
      Test it using regex
      - [X] To unit test it, create a unit test class that override
	protected members
      - [X] cmake search for boost.regex 
      - [X] Add Boost.regex component to DEPENDENCIES
      - [X] Implement probeFromString function	
    - [X] Try to get it with RenderWindow(or RenderSystem) width/height and 
      cast it to a string value.
    - [X] May remove the unneeded probeFromInts function
    - [X] Handle probe error using an exception if we can't probe
      in any ways (if two ways fail)
      From src/client/Exception.hpp
    - [X] We must find in wich string form we must save resolution
      to save resolution to ogre.cfg. String have spaces before and
      after the "x" character. Sometimes one space, sometimes two.
    - [X] Not sure we need the int/int result, maybe the probe function
      could directly return string version
- [X] GameEngine finally uses ResolutionHandler to get current resolution
- [X] May remove the src/client/LoadingBar.* (not used anymore)
- [X] Maybe we could ask for OgreCfgSaver save using a CeguiDialog
  - [X] Maybe we need a ModalDialog class that handles an bool exec() method
    We have an issue with the blocking exec function.
    Maybe We must register a listener for this class and wait
    - Maybe we have to call Ogre::Root::renderOneFrame()
      http://www.ogre3d.org/docs/api/1.8/class_ogre_1_1_root.html#aeaad25268c0ad8007ce8961a32242c77
    Actually, changing resolution will test the exec() function.
    The dialog is shown and event on the Ok button work.
    - [X] Should pass a GameEngine* parameter to exec() function
    - [X] We don't set waiting to false so the exec() function never exit.
      - [X] Create the XML layout
	Set the title/message from the constructor
	There is a pb with the name : it's called nyiRoot because it shares
	the CeguiDialog's constructor which use nyiRoot
      - [X] Must contain at least two buttons (Ok/Cancel)	
      - [X] Handle Ok and Cancel buttons events
    - [X] Geometry buffers aren't drawn. It seems normal since overlays are
      manually drawn in GameEngine::overlayHandler. Maybe we need to
      call it from exec() for every frame ? This doesn't work!
      Calling clearGeometry(CEGUI::RQ_OVERLAY) doesn't fix that
      - [X] Trying to move clearGeometry and drawOverlay *before* messagePump()
	Got a sefault, because overlays aren't yet created in MainMenu::drawOverlay()
      - [X] Trying to move clearGeometry and drawOverlay between messagePump and renderOneFrame
	Don't work
      - [X] Still doesn't work	
  - [X] It seems the Modal dialog doesn't work when called twice
    Maybe because the ModalDialog::closeDialog() only hide() the dialog.
  - [X] Create a ConfirmationDialog class (based on ModalDialog)
    For instance, ModalDialog *is* the ConfirmationDialog. We need to
    move some members in this new class. It is correctly shown but events
    don't work.
    - [X] Create an empty class
    - [X] Move events handler from constructor
    - [X] Then move event handlers
      exec() should stay in ModalDialog
**** DONE Update GNU headers date for 2017
     CLOCK: [2017-01-14 sam. 13:58]--[2017-01-14 sam. 13:58] =>  0:00
     CLOCK: [2017-01-14 sam. 13:51]--[2017-01-14 sam. 13:57] =>  0:06
     CLOCK: [2017-01-13 ven. 13:07]--[2017-01-13 ven. 13:12] =>  0:05
     CLOCK: [2017-01-13 ven. 11:20]--[2017-01-13 ven. 11:22] =>  0:02
- [X] In subdir services
- [X] In subdir logger
- [X] In subdir client
- [X] In subdir server
**** DONE [feature_GuiScaling] GUI scale handling and Options gamestate
     CLOCK: [2016-12-07 mer. 07:27]--[2016-12-07 mer. 08:28] =>  1:01
     CLOCK: [2016-12-07 mer. 04:06]--[2016-12-07 mer. 04:39] =>  0:33
- [X] The GUI is huge at high resolution
  - [X] Fix this CEGUIerror
    =No object of type 'Font' named 'DejaVuSans-12' i=
    Can't find the reason of this error
    - [X] Try to find source of error using try/catch
  - [X] Maybe try to add a scale factor
    TaharezLook uses DejaVu-12
- [X] The GUI is huge at high resolution
  - [X] Fix this CEGUI error: =No object of type 'Font' named 'DejaVuSans-12' i=
    - [X] First extract DejaVu font and add its location to resources.cfg.in
    - [X] Finally, maybe we don't have to extract these files
      Because DejaVu-12-NoScale can be the trick
      *Can't fix* : really an unknown issue
    - [X] First isolate the call that throws this exception
      At least two error in TempMessage() and MainMenu()
  - [X] The segfault is fixed (comes from TempMessage
    but we don't have message when switching fullscreen or changing resolution
    However, the version number is printed correctly
    Using DejavuSans-12-NoScale fixed segfault
  - [X] Maybe try to add a scale factor
    TaharezLook uses DejaVu-12
    See if font's AutoScaled value isn't set to True
    Maybe also on the imageset definition
- [X] It could be fine if this changes could be serialized in the same
  way Ogre does it. This way, at next startup, the Ogre config dialog
  would be defaulted to in-game options.
- [X] Need to merge GuiScaling branch
**** DONE Handle the Options gamestate
     CLOCK: [2016-11-25 ven. 06:25]--[2016-11-25 ven. 09:40] =>  3:15
     CLOCK: [2016-11-25 ven. 06:03]--[2016-11-25 ven. 06:16] =>  0:13
     CLOCK: [2016-11-25 ven. 05:33]--[2016-11-25 ven. 06:01] =>  0:28
     CLOCK: [2016-11-25 ven. 03:30]--[2016-11-25 ven. 05:31] =>  2:01
     CLOCK: [2016-11-24 jeu. 07:42]--[2016-11-24 jeu. 08:17] =>  0:35
     CLOCK: [2016-11-24 jeu. 05:44]--[2016-11-24 jeu. 06:17] =>  0:33
     CLOCK: [2016-11-24 jeu. 03:51]--[2016-11-24 jeu. 04:52] =>  1:01
     CLOCK: [2016-11-24 jeu. 03:18]--[2016-11-24 jeu. 03:43] =>  0:25
     CLOCK: [2016-11-23 mer. 00:38]--[2016-11-23 mer. 01:04] =>  0:26
     CLOCK: [2016-11-21 lun. 01:44]--[2016-11-21 lun. 02:01] =>  0:17
     CLOCK: [2016-11-21 lun. 00:15]--[2016-11-21 lun. 01:41] =>  1:26
     CLOCK: [2016-11-20 dim. 23:03]--[2016-11-21 lun. 00:06] =>  1:03
     CLOCK: [2016-11-20 dim. 21:04]--[2016-11-20 dim. 23:01] =>  1:57
     CLOCK: [2016-11-19 sam. 03:54]--[2016-11-19 sam. 04:04] =>  0:10
     CLOCK: [2016-11-19 sam. 02:20]--[2016-11-19 sam. 03:35] =>  1:15
     CLOCK: [2016-11-19 sam. 01:50]--[2016-11-19 sam. 02:18] =>  0:28
     CLOCK: [2016-11-19 sam. 00:07]--[2016-11-19 sam. 01:05] =>  0:58
     CLOCK: [2016-11-18 ven. 23:20]--[2016-11-18 ven. 23:46] =>  0:26
     CLOCK: [2016-11-18 ven. 04:03]--[2016-11-18 ven. 04:21] =>  0:18
     CLOCK: [2016-11-18 ven. 03:06]--[2016-11-18 ven. 03:39] =>  0:33
     CLOCK: [2016-11-18 ven. 02:35]--[2016-11-18 ven. 03:02] =>  0:27
     CLOCK: [2016-11-17 jeu. 05:04]--[2016-11-17 jeu. 05:32] =>  0:28
     CLOCK: [2016-11-17 jeu. 04:10]--[2016-11-17 jeu. 05:04] =>  0:54
     CLOCK: [2016-11-16 mer. 05:24]--[2016-11-16 mer. 06:10] =>  0:46
     CLOCK: [2016-11-16 mer. 02:11]--[2016-11-16 mer. 02:39] =>  0:28
     CLOCK: [2016-11-16 mer. 01:52]--[2016-11-16 mer. 02:11] =>  0:19
     CLOCK: [2016-11-16 mer. 00:25]--[2016-11-16 mer. 00:54] =>  0:29
- [X] Must handle 'Alt + Enter' keybinding to switch fullscreen status
  - [X] Handle the keybinding in GameEngine, so it's available in all gamestates
  - [X] How to make it happens with Ogre3D 
    see http://ogre3d.org/forums/viewtopic.php?f=2&t=10811
    We have to save state, kill renderWindow and recreate it
    - [X] Maybe implement a StateSaver (with unit tests) to handle
      the storage, for example in an associative array as strings,
      from and to typed variables using template functions.
      - [X] Do we need to search for boost.variant in cmake ?? NO
      - [X] Maybe a map of boost::variant
      - [X] Must throw error if key can't be found or not unique
      - [X] Exception must be correctly handle by subclasses	
	- [X] Created
        - [X] Must unit test Exception what text
        - [X] Must handle cast errors in a exception-based way
      - [X] Must fully document StateSaver class and members
      - [X] We can also handle CEGUI::Windows size and position and add
	    some typed ::save ::restore(const str& name, Window*) functions.
	- [X] First, we need a concat function with key and subkey
        - [X] We need to save/restore a CEGUI::UDim
        - [X] How to get CEGUI::Window position and size : getArea and setArea
	  from CEGUI::Element uses a URect object setget/width/height
	  - [X] Can unit tests can safely create CEGUI::Window ? NO
          - [X] Implement its dave/restore anyway
	- [X] Must also handle visible state
      - [X] Make EmptyGameState become a header because used by some 
	GameState_Test.cpp and StateManager_Test.cpp
      - [X] Then we'll need two GameState pure virtual function
	maybe save/load or save/restore passing a StateSaver* argument
      - [X] Handle Alt+Enter in GameEngine
      - [X] Next thing is to handle GameEngine::reconfigure()
        - [X] Must get the acual fullscreen value from Ogre config
	- [X] Save current gamestate and serialize it
        - [X] Handle the Ogre restart as for shutdown. A boolean flag
	  member that shutdown and restart Ogre
	  But that's the function that can handle restart after
	  frameRenderingQueued returns false 
	  - [X] Directly in main.cpp
	  - [X] The CEGUI log tells we don't have correctly shutdown   
	    CEGUI::System object is already initialized
          - [X] Must implement GameEngine::reconfigure()
	    - [X] We have many things to initialise without config dialog
            - [X] We saw the fullscreen window appear and disappear
            - [X] Everything works except for resolution (not the same)
        - [X] Ogre startup process must stay in little members function
	  so we exactly know the order of initialization
        - [X] Shutdown Ogre
        - [X] Change its fullscreen configuration (maybe save it to file)
        - [X] Restart Ogre an subsystem (OIS, CEGUI etc...)
	- [X] First redraw overlays
	  We have a segfault when re-entering gamestate in GameState::loadLayout()
      - [X] Then implement save/restore in MainMenu
	- [X] save the visible state of NyiDialogs, 
        - [X] position of main menu
	  - Can't really save it. I don't know why. 
          - Maybe it's not the good window. 
          - When loading a layout in GameState::loadLayout, we should
	    pass a second argument to return the right Window* object
	    - [X] We'll add a parameter to loadLayout()
	      The windowName to be returned
        - [X] Position of dialogs
	  - [X] All dialog should be created in the Constructor
          - [X] mDialogWindow isn't the good one
	  - [X] Dialog oposition is saved but not visibility  
	    Visibility is a special case
- [X] May add a temporary (say 5 seconds) geometrybuffer object
  with centered text to tell what changed (Fullscreen : On|Off)
  Created in a TempMessage class with a draw(int seconds) and a countdown()
  called every seconds
  - [X] We can get width of text using Font::getTextExtent
  - [X] After that, we have to center it  
  - [X] Shoudl print Fullscreen : On/Off
- [X] F11 write a screenshot to file
  Must save the CEGUI::GeometryBuffers
  - [X] Using RenderWindow::writeContentToTimestampedFile()
    http://www.ogre3d.org/docs/api/1.8/class_ogre_1_1_render_window.html#a2c3046ce0995cc3058e2919b985e80f6
  - [X] Add this key binding to the README.md file  
  - [X] Must write a centered message with name of the created file
- [X] Should save this configuration for future launchs
- [X] We must prepare the Ogre ConfigMap override for future
  multi-options reconfigure
  - [X] With a Specialized map used to override Ogre options
    - Does a map<string,string> is good ? or we need <string, Option>
    - It can be a string,string
    - [X] Must clear the map after config override  
- [X] Maybe use the same concept for [Alt++]/{Alt+-] to change resolution
  - [X] Must get the supported "Video Mode" list
    OgreOptionsMap has a supported value list.
    Must first find the actual value, then select the next/previous one
  - [X] We must find a way to tell which options to override in
    GameEngine::reconfigure()
    - Maybe a map<string, string> of to-be-overriden options
      configure it in keypressed callback then reconfigure. So we don't
      need toFullscreen member anymore.
  - [X] Now can safely remove toFullscreen member
**** DONE GameState system switch and more client work
     CLOCK: [2016-11-09 mer. 04:19]--[2016-11-09 mer. 04:45] =>  0:26
     CLOCK: [2016-11-09 mer. 03:01]--[2016-11-09 mer. 03:41] =>  0:40
     CLOCK: [2016-11-09 mer. 02:08]--[2016-11-09 mer. 02:38] =>  0:30
     CLOCK: [2016-11-08 mar. 05:26]--[2016-11-08 mar. 05:43] =>  0:17
     CLOCK: [2016-11-07 lun. 01:15]--[2016-11-07 lun. 01:37] =>  0:22
     CLOCK: [2016-11-07 lun. 00:51]--[2016-11-07 lun. 01:10] =>  0:19
     CLOCK: [2016-11-07 lun. 00:13]--[2016-11-07 lun. 00:47] =>  0:34
     CLOCK: [2016-11-06 dim. 23:46]--[2016-11-07 lun. 00:10] =>  0:24
     CLOCK: [2016-11-05 sam. 02:50]--[2016-11-05 sam. 04:56] =>  2:06
- [X] Find a better way to handle GeometryBuffer object	
  - [X] We need a GameState::draw() callback at least for geometrybuffers
    or a list of buffers in GameEngine (or a superclass) with a draw
    callback.
    - [X] Create an empty but implemented callback in GameState. Do not
      override it to let it empty.
    - [X] Create needed geometry bufers in MainMenu
      We need an access to OgreRenderer to destroy geometryBuffers
      - [X] Start with GeometryBuffer
	Try to set a little clippingRect from the size of geometrybuffer
      - [X] Override the drawGeometry function in MainMenu and draw it in callback
      - [X] Correctly destroy it in MainMenu::exit()
      - [X] Completely remove mLogoGeometry references in GameEngine
    - [X] Handle next GeometryBuffer in MainMenu
      - [X] VersionGeometry
      - [X] FpsGeometry
	Not shown because have no text
  - [X] How to deal with the 1 second update ?
    - [X] Maybe a oneSecondUpdate() function in GameState ?
      or a hudUpdate callback()
      - [X] Cerate an empty callback in Gamestate
      - [X] Override it in MainMenu
      - [X] Make the actual CEGUI::Font used for drawing text an instance member
      - [X] Update the overlay text
      - [X] Remove the mFpsGeometry "no update slot" text
- [X] Try to make geometrybuffer's clipping rectangles more little : not needed
- [X] If CI fixed, add image in README.md (add it anyway)
- [X] There is (again) a segfault when cancel the Ogre3D config dialog
  Can't see this segfault again. 
  Trying with a clang++ build: no segault
**** DONE Client work
     CLOCK: [2016-11-04 ven. 02:26]--[2016-11-04 ven. 02:42] =>  0:16
     CLOCK: [2016-11-04 ven. 01:55]--[2016-11-04 ven. 02:24] =>  0:29
     CLOCK: [2016-11-04 ven. 01:03]--[2016-11-04 ven. 01:54] =>  0:51
     CLOCK: [2016-11-03 jeu. 01:28]--[2016-11-03 jeu. 01:42] =>  0:14
     CLOCK: [2016-11-03 jeu. 00:28]--[2016-11-03 jeu. 01:26] =>  0:58
     CLOCK: [2016-11-02 mer. 23:44]--[2016-11-03 jeu. 00:21] =>  0:37
     CLOCK: [2016-11-01 mar. 23:49]--[2016-11-02 mer. 00:16] =>  0:27
     CLOCK: [2016-11-01 mar. 23:04]--[2016-11-01 mar. 23:46] =>  0:42
     CLOCK: [2016-11-01 mar. 22:01]--[2016-11-01 mar. 22:55] =>  0:54
     CLOCK: [2016-10-31 lun. 04:36]--[2016-10-31 lun. 04:47] =>  0:11
     CLOCK: [2016-10-31 lun. 04:07]--[2016-10-31 lun. 04:35] =>  0:28
     CLOCK: [2016-10-31 lun. 01:50]--[2016-10-31 lun. 02:53] =>  1:03
     CLOCK: [2016-10-30 dim. 01:34]--[2016-10-30 dim. 01:57] =>  0:23
     CLOCK: [2016-10-30 dim. 01:01]--[2016-10-30 dim. 01:17] =>  0:16
     CLOCK: [2016-10-29 sam. 04:38]--[2016-10-29 sam. 04:50] =>  0:12
     CLOCK: [2016-10-29 sam. 04:00]--[2016-10-29 sam. 04:05] =>  0:05
     CLOCK: [2016-10-29 sam. 02:22]--[2016-10-29 sam. 03:55] =>  1:33
     CLOCK: [2016-10-28 ven. 03:41]--[2016-10-28 ven. 03:52] =>  0:11
     CLOCK: [2016-10-28 ven. 02:47]--[2016-10-28 ven. 03:34] =>  0:47
     CLOCK: [2016-10-27 jeu. 00:06]--[2016-10-27 jeu. 00:59] =>  0:53
     CLOCK: [2016-10-26 mer. 02:11]--[2016-10-26 mer. 02:31] =>  0:20
     CLOCK: [2016-10-26 mer. 01:12]--[2016-10-26 mer. 01:57] =>  0:45
     CLOCK: [2016-10-25 mar. 03:27]--[2016-10-25 mar. 04:08] =>  0:41
     CLOCK: [2016-10-25 mar. 02:29]--[2016-10-25 mar. 02:37] =>  0:08
     CLOCK: [2016-10-24 lun. 01:21]--[2016-10-24 lun. 02:24] =>  1:03
     CLOCK: [2016-10-24 lun. 00:17]--[2016-10-24 lun. 01:15] =>  0:58
     CLOCK: [2016-10-22 sam. 00:54]--[2016-10-22 sam. 01:24] =>  0:30
     CLOCK: [2016-10-21 ven. 23:27]--[2016-10-22 sam. 00:13] =>  0:46
     CLOCK: [2016-10-20 jeu. 23:19]--[2016-10-20 jeu. 23:36] =>  0:17
     CLOCK: [2016-10-20 jeu. 00:00]--[2016-10-20 jeu. 00:46] =>  0:46
     CLOCK: [2016-10-19 mer. 00:27]--[2016-10-19 mer. 01:00] =>  0:33
     CLOCK: [2016-10-19 mer. 00:10]--[2016-10-19 mer. 00:24] =>  0:14
     CLOCK: [2016-10-18 mar. 01:35]--[2016-10-18 mar. 01:55] =>  0:20
     CLOCK: [2016-10-18 mar. 01:08]--[2016-10-18 mar. 01:19] =>  0:11
     CLOCK: [2016-10-15 sam. 01:44]--[2016-10-15 sam. 02:37] =>  0:53
     CLOCK: [2016-10-14 ven. 23:01]--[2016-10-15 sam. 00:15] =>  1:14
     CLOCK: [2016-10-12 mer. 03:03]--[2016-10-12 mer. 03:22] =>  0:19
     CLOCK: [2016-10-12 mer. 02:27]--[2016-10-12 mer. 02:43] =>  0:16
     CLOCK: [2016-10-08 sam. 04:01]--[2016-10-08 sam. 05:02] =>  1:01
     CLOCK: [2016-10-06 jeu. 02:30]--[2016-10-06 jeu. 03:46] =>  1:16
- [X] See why client get stuck in 'parsing scripts' loading bar
  Last message is :
  Parsing scripts for resource group Schemes
  Finished parsing scripts for resource group Schemes
  Creating resources for group Schemes
  - Now the finish things is called but nothing moves and menu.layout
    doesn't appear
  - It seems LoadingBar is shown only when all work is done.  
  - Try to see BspDemo as an example
  - I changed the background color to see when ist drawn : at the end of loading  
  - The screen isn't updated if we change window
- [X] Let's test with Ogre 1.9 in another branch [test_ogre1.9]
  Tested, but failed due to a segfault
- [X] Test if basic tutorials for Ogre 1.8.0 work
- [X] Maybe switch to OSG 3.4 ? NO
  currently testing ~/Jeux/osg-test/osg-cegui/
  Testing with CEGUI 0.8.7
- [X] Test for locally built CEGUI 0.8
  - [X] It works
  - [X] Change CMakeLists.txt to search for this version 
    Can't test the but the -0 suffix makes sCEGUI 0.7 fail
  - [X] Change DEPENDENCIES file
  - [X] Can't find "TaharezLook/MouseArrow" image or get a segfault
  - [X] Mouse Coords are wrong
- [X] Next steps to get a working GUI
  - [X] Hide the system mouse cursor
  - [X] Seems the resize icon is wrong too
    Maybe try the Vanilla mouse cursor : do not work
    Testing with Taharez-based layout : it works fine
- [X] Must manually build CEGUI 0.8 for CI
  because CEGUI-0' and 'CEGUI-0-OGRE' can't be found
  - [X] Trying to build (follow http://cegui.org.uk/wiki/Building_from_source)
- [X] Continue client work
  - [X] Make the exit button work
  - [X] Client has a segfault if we cancel Ogre configuration dialog
  - [X] Maybe add a static image as logo
    - [X] Create the logo image, imageset and scheme, following http://www.ogre3d.org/tikiwiki/tiki-index.php?page=Creating+a+good+looking+Confirm+Dialog+with+CEGUI#ConfirmDialogBackground.imageset
    - [X] Load the .scheme file (commented out for instance)
    but now, nothing shown and can't interact, it seems this scheme file 
    breaks something
    - [X] Try to use /ImagesetFromImage/ in scheme file and remove 
    the .imageset file
    CEGUI error =Unknown element encountered: <ImagesetFromFile>=
    - [X] Try to use an overlayHandler
    - [X] Now correctly move the logo
    - [X] Remove unneeded files (scheme, imagesets etc...)
    - [X] May remove the CEGUI logo image : No, part of the cegui-orig archive
- [X] Add a CEGUI overlay with version-revision numbers
  - [X] Add a verstring to config.h.in "version-revision"
  - [X] Add the GeometryBuffer as a GameEngine private member
  - [X] Find how to draw text in geometry buffer
    may try with a CEGUI::RenderedString
    See how the exampleFramework draw the FPS
- [X] There is a segfault when we close the window using system's close button
  in =GameEngine::frameRenderingQueued(Ogre::FrameEvent const&)=
- [X] Test if resizing the renderwindow works properly
  see http://www.ogre3d.org/tikiwiki/tiki-index.php?page=Basic+Tutorial+6
- [X] Add a NYI layout (A simple dialog with Not Yet Implemented text)
  Possibly with a parameter : unimplemented feature
  - [X] Create a new layout NyiDialog.layout
  - [X] Try this layout until it works
  - [X] Make this a real class with the featurename parameter
    Maybe with Dialog super class that could handle the layout file loading
    and the event mappers (Ok/Cancel buttons)
    - [X] Can the layout name be a simple std::string?  Yes
    - [X] List the Ogre/CEGUI things we need to create the dialog
      CEGUI::WindowManager *wmgr = CEGUI::WindowManager::getSingletonPtr();
      the CEGUI root window (Maybe with GUIContext::getRootWindow();)
    - [X] First, implement in a simple window
    - [X] Then handle the visibility
      with show(), hide() and isVisible() function
    - [X] See how to correctly destroy the dialogwindow in CeguiDialog destructor
      - [X] We first need to create the dialog from an event, to see
	if creating it twice is a problem
    - [X] We should handle the Ok button callback (simply hide this)
      - [X] Handle the Ok button and close the dialog
    - [X] Correctly handle the destruction of CeguiDialog underlying window
- [X] Now, create the NyiDialog, based on CeguiDialog
  - [X] Pass the featurename to named constructor
    and add this to the dialog text
  - [X] Try to use styled text to  emphasis the featurename
  - [X] Must be tested with multiple NyiDialog at the same time
    - We have an CEGUI::AlreadyExistsException, we must add a uniqueName
      and create a parentWindow
  - [X] Now, two dialogs open at the same time
- [X] May add a FPS CEGUI geometryBuffer and maybe other stats
  We can get FPS with RenderTarget (http://www.ogre3d.org/docs/api/1.8/class_ogre_1_1_render_target.html)
  - [X] First, add the geometrybuffer in the bottom right corner
  - [X] Get the RenderTarget stats every second
  - [X] Print essential values
- [-] Must implement a GameState system
  - Current work goes in gsMainMenu
  - [X] Implement it as GameState/StateManager with unit tests
    Continue to implement StateManager and its tests
  - [X] Then, GameEngine publicly inherits StateManager
  - [-] Move actual GameEngine test in a MainMenu gamestate
    - [X] Create the main class
    - [-] Move current GameEngine::run() content to MainMenu gamestate
      - [X] Create a simpler GameState::loadLayout function
      - [X] Now, we have to handle events a better way	
	- [X] Handle onExit
	- [X] Shows NyiDialog on onLocalTest  
	- [X] Shows NyiDialog on onNetworkPlay  
	- [X] Same NyiDialog work on onOptions
        - [X] Remove all refrences to NyiDialog in GameEngine
**** DONE [test_ogre1.9] Let's test if switching to Ogre1.9
     CLOCK: [2016-10-12 mer. 01:19]--[2016-10-12 mer. 02:07] =>  0:48
     fix the client's issues
- [ ] Mainly the CEGUI rendering and the LoadingBar ones
  - removes LoadingBar.cpp from client's CMakeFiles.txt
  - Removed OgreOerlay.h from LoadingBar.hpp
  - Remove multiple LoadingBar references in GameEngine.cpp
  - Direct modification of /usr/include/CEGUI/RendererModules/Ogre/CEGUIOgreRenderer.h
- [ ] To much compilation errors, this code is definitely for 1.8
**** DONE Git switch items
***** DONE Continue the INSTALL file
      CLOCK: [2016-10-05 mer. 02:20]--[2016-10-05 mer. 03:16] =>  0:56
- [X] Rename it to INSTALL.md
- [X] With cmake flags on how to change install dirs...
  See automake's INSTALL file for info (/usr/share/automake-1.14/INSTALL)
  - [X] Basic installation (from automake's INSTALL)
  - [X] Compilers and Options
  - [X] Optional Features
***** DONE Handle unit tests
      CLOCK: [2016-10-04 mar. 03:43]--[2016-10-04 mar. 04:21] =>  0:38
      CLOCK: [2016-09-02 ven. 02:55]--[2016-09-02 ven. 03:18] =>  0:23
      CLOCK: [2016-09-01 jeu. 18:38]--[2016-09-01 jeu. 18:46] =>  0:08
      CLOCK: [2016-09-01 jeu. 05:39]--[2016-09-01 jeu. 05:45] =>  0:06
      CLOCK: [2016-09-01 jeu. 05:19]--[2016-09-01 jeu. 05:29] =>  0:10
      CLOCK: [2016-09-01 jeu. 04:14]--[2016-09-01 jeu. 04:45] =>  0:31
      CLOCK: [2016-08-31 mer. 21:50]--[2016-08-31 mer. 22:20] =>  0:30
- [X] Implement a simple unit test
  - [X] Create a cmake option for unit tests (default to ON)
  - [X] cmake must search for Boost.Test if unit tests are ON
  - [X] Add 'UT ?' to the TODO revision
- [-] Implement a sample test
  No need for a main function, remove main file
  - [-] run it on travis-ci
  - [X] Link unit tests with `make check`
  - [X] Make travis run them
- [X] Got segfault in unit tests (but work with travis-ci)
- [X] See why librainbrurpg-logger.so is a shared lib. while 
  - [X] Only install install clang on 3.8 if clang is selected (not for g++)
  - [X] Note that clang can fail
  - [X] Try to install clang 3.8 on travis
    got a 404 on llvm apt repository URL
- [X] Testing now wih trusty
  - [X] undefined references to program_options when linking client : FIXED
***** DONE Trying to create a new landing page for rainbrurpg.org
  CLOCK: [2015-08-25 mar. 21:27]--[2015-08-25 mar. 21:55] =>  0:28
  *Project already create *
- [X] Maybe this could become a github page
  see https://pages.github.com/
- [X] A single homepage using bootstrap
  Trying to base it on http://startbootstrap.com/template-overviews/grayscale/
- [X] Could we use github API to get last commit/last tag (v???) is 
  the last stable version
  see https://github.com/michael/github/blob/master/github.js #listTags
- [X] Must use cookiechoice
- [X] Maybe add Analytics/Adsense ?
- [X] Place other social network buttons (addthis/flattr)
***** DONE Trying cmake as a global build system
      CLOCK: [2016-08-18 jeu. 02:24]--[2016-08-18 jeu. 02:32] =>  0:08
      CLOCK: [2016-08-18 jeu. 01:36]--[2016-08-18 jeu. 02:14] =>  0:38
      CLOCK: [2016-08-18 jeu. 00:59]--[2016-08-18 jeu. 01:24] =>  0:25
      CLOCK: [2016-08-04 jeu. 23:08]--[2016-08-04 jeu. 23:52] =>  0:44
      CLOCK: [2016-07-29 ven. 00:08]--[2016-07-29 ven. 00:32] =>  0:24
      CLOCK: [2016-06-11 sam. 02:08]--[2016-06-11 sam. 02:18] =>  0:10
      CLOCK: [2016-06-11 sam. 01:32]--[2016-06-11 sam. 01:56] =>  0:24
      CLOCK: [2016-06-04 sam. 05:40]--[2016-06-04 sam. 06:09] =>  0:29
      CLOCK: [2016-05-02 lun. 20:49]--[2016-05-02 lun. 21:47] =>  0:58
      CLOCK: [2016-04-26 mar. 23:44]--[2016-04-27 mer. 00:18] =>  0:34
      CLOCK: [2016-03-13 dim. 22:22]--[2016-03-13 dim. 22:49] =>  0:27
      CLOCK: [2015-10-28 mer. 19:29]--[2015-10-28 mer. 19:44] =>  0:15
      CLOCK: [2015-09-08 mar. 21:39]--[2015-09-08 mar. 21:42] =>  0:03
      CLOCK: [2015-09-08 mar. 21:20]--[2015-09-08 mar. 21:38] =>  0:18
      CLOCK: [2015-09-07 lun. 22:29]--[2015-09-07 lun. 22:40] =>  0:11
      CLOCK: [2015-09-07 lun. 22:03]--[2015-09-07 lun. 22:13] =>  0:10
      CLOCK: [2015-09-05 sam. 20:03]--[2015-09-05 sam. 20:39] =>  0:36
      CLOCK: [2015-08-24 lun. 20:52]--[2015-08-24 lun. 21:23] =>  0:31
      CLOCK: [2015-08-02 dim. 16:10]--[2015-08-02 dim. 16:16] =>  0:06
      CLOCK: [2015-08-02 dim. 15:34]--[2015-08-02 dim. 16:09] =>  0:35
      CLOCK: [2015-07-29 mer. 19:00]--[2015-07-29 mer. 19:45] =>  0:45
      CLOCK: [2015-07-29 mer. 18:17]--[2015-07-29 mer. 18:46] =>  0:29
      CLOCK: [2015-07-27 lun. 22:23]--[2015-07-27 lun. 23:10] =>  0:47
   Because the actual multi-projects setup id failing and to ease the
   travis-ci and coverity usage.
- [X] Create CMakeLists.txt
- [X] May create a config.h
- [X] Fix multiple errors in client/src/BaseApplication
  It's a Ogre1.9 source, not used anymore in Makefile.am
  The error is due to the CMake way to add sources (GLOB)
- [X] Add missing declaration in config.h
- [X] Build another components
  Now that logger ad client correctly build
  - [X] meta
    - [X] libclient (no sources)
    - [X] libserver (no sources)
  - [X] network  (no sources)
  - [X] services
  - [X] server
- [X] Move cmake-built sources to a top-level src dircetory
  All sources should be in src/ so we have src/client src/server...
  - [X] First, mv logger
    - [X] move .hpp an .cpp
    - [X] Logger examples conditionnal compilation
    - [X] Add a README.md file
    - [X] May move tools sources
      We must generate _ui.rb file using rbuic4
      The actual custom_target doesn't work
    - [X] We should stop compilation and have a comprehensive
      error message if we can't find rbuic4
    - [X] What to do with standard files (COPYING, etc...)
      - [X] COPYING and AUTHORS now are top-level files
      - [X] What to do with automake-based INSTALL file      
	Just added a simple cmake based INSTALL in root dir.
      - [X] Since logger have a po/ directory, how to use gettext with cmake
    - [X] Remove unneeded logger/ files
      - [X] Remove autoconf files
      - [X] What to do with po/ directpry ?
	- [X] Maybe in a top-level dir, test it with cmake
	- [X] We must find a way to call xgettext to extract translatable messages 
              from sources
	- [X] We have to correctly set logger_src (or _src_list)
        - [X] We must call xgettext on logger sources to extract messages
      - [X] Compare DEPENDENCIES with top-evel one
	In fact, client's one becomes top-level DEPENDENCIES file
      - [X] Add ROADMAP content here (and TODO content also)
      - [X] How to add ChangeLog content sorted by date
	Finally, the content of ChangeLog and changelog.dev are moved
	to OLD and not added to current top-level files.
- [X] Move meta to OLD/ because the implementation will change
- [X] Finish services migration
  - [X] move .hpp and .cpp to src/services
  - [X] Change the path for cmake
  - [X] Remove autotools files
  - [X] move unneeded files to OLD/services
- [X] Finish client migration
  - [X] move .hpp and .cpp to src/client
  - [X] Change .cfg.in to src/client
  - [X] Change cmake path to correctly build the library
  - [X] Change cmake path to correctly build .cfg files
  - [X] Remove unneeded files
  - [X] Remove autotools files
  - [X] move unneeded files to OLD/client
- [X] Nuild again the server-ctl binary
  - [X] Uses cmake's config.h file
  - [X] Should add readline to dependencies checked by cmake
- [X] Finish server migration
  - [X] move .hpp and .cpp to src/services
  - [X] Remove unneeded files
  - [X] Change cmake path to correctly build the library
  - [X] Remove autotools files
  - [X] move unneeded files to OLD/server
- [X] When all sources in src/ top-level dir, changes CMAKE_CXX_FLAGS
  in CMakeLists to ${CMAKE_SOURCE_DIR}/src/,,
- [X] Make a top-level DEPENDENCIES file (from CI/before_install.sh)
  and remove all others. The actual one is from client subproject.
- [X] Should move all changelog.dev in top-level one
  Canceled: not needed and to much work to sotr it by date
- [X] Should not use file(GLOB...) from cmake to collect sources files
***** DONE Correct NEW project setup
      CLOCK: [2016-02-19 ven. 19:32]--[2016-02-19 ven. 19:43] =>  0:11
      CLOCK: [2016-01-24 dim. 22:17]--[2016-01-24 dim. 22:27] =>  0:10
      CLOCK: [2016-01-16 sam. 23:13]--[2016-01-16 sam. 23:23] =>  0:10
      CLOCK: [2016-01-16 sam. 19:49]--[2016-01-16 sam. 20:38] =>  0:49
      CLOCK: [2016-01-05 mar. 22:14]--[2016-01-05 mar. 22:20] =>  0:06
      CLOCK: [2016-01-05 mar. 21:24]--[2016-01-05 mar. 21:41] =>  0:17
      CLOCK: [2016-01-04 lun. 19:42]--[2016-01-04 lun. 19:56] =>  0:14
      CLOCK: [2015-10-29 jeu. 22:37]--[2015-10-29 jeu. 22:46] =>  0:09
- [X] Must change GNU headers dates for 2016
  - [X] in client/
  - [X] in logger/ (if there are sources)
  - [X] in meta/
  - [X] in network/
  - [X] in server/
  - [X] in services/
  - [X] in src/logger/
  - [X] in website/
- [X] The client can't find plugins.cfg, so we have an Ogre error
  =Error: Shell widget menu has zero width and/or height=
  - [X] We also have to create them from *.cfg.in (with ressources.cfg)
    The generated file is dirctly generated in client's binary dir.
- [X] Now, We have to generate resources.cfg the same way
- [X] Logger prints full pathname with the filename, fix it
- [X] Find how to compute FT and SLOC for the now-global TODO version
- [X] Individual project README items should go here
***** DONE Must install cookiechoices on rainbrurpg.org
  CLOCK: [2015-09-27 dim. 18:21]--[2015-09-27 dim. 19:30] =>  1:09
- [X] For reference
  - How to copy a file to sf.net web server https://sourceforge.net/p/forge/documentation/Project%20Web%20Services/
    - How to connect to ssh webservers =ssh -t USER,PROJECT@shell.sourceforge.net create=
  - How to test a new template using foswiki Add =?cover=myskin?refresh=cache= to url
- [X] Copy cookiechoices.js file to web server
   /home/project-web/fooproject/htdocs
  ou
  /home/users/r/ra/rainbru
- [X] May work on a new template to test it before launching
  - [X] Create the cookie-ex.js and add it to template
    in /static/pub/cookiechoices/
  - [X] May create a Main/PrivacyPolicy page and make cookie-ex redirect here
  - [X] Finally, set the cookies, rainbru and template order in Preferences
    in page Main.SitePreferences 
